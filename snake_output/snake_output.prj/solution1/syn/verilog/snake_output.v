// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="snake_output,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.100500,HLS_SYN_LAT=17280071,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=45,HLS_SYN_FF=8597,HLS_SYN_LUT=15603,HLS_VERSION=2018_3}" *)

module snake_output (
        ap_clk,
        ap_rst_n,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state73 = 3'd4;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [23:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [23:0] m_axis_video_V_data_V_1_data_out;
reg    m_axis_video_V_data_V_1_vld_in;
wire    m_axis_video_V_data_V_1_vld_out;
wire    m_axis_video_V_data_V_1_ack_in;
wire    m_axis_video_V_data_V_1_ack_out;
reg   [23:0] m_axis_video_V_data_V_1_payload_A;
reg   [23:0] m_axis_video_V_data_V_1_payload_B;
reg    m_axis_video_V_data_V_1_sel_rd;
reg    m_axis_video_V_data_V_1_sel_wr;
wire    m_axis_video_V_data_V_1_sel;
wire    m_axis_video_V_data_V_1_load_A;
wire    m_axis_video_V_data_V_1_load_B;
reg   [1:0] m_axis_video_V_data_V_1_state;
wire    m_axis_video_V_data_V_1_state_cmp_full;
wire   [2:0] m_axis_video_V_keep_V_1_data_out;
reg    m_axis_video_V_keep_V_1_vld_in;
wire    m_axis_video_V_keep_V_1_vld_out;
wire    m_axis_video_V_keep_V_1_ack_in;
wire    m_axis_video_V_keep_V_1_ack_out;
reg    m_axis_video_V_keep_V_1_sel_rd;
wire    m_axis_video_V_keep_V_1_sel;
reg   [1:0] m_axis_video_V_keep_V_1_state;
wire   [2:0] m_axis_video_V_strb_V_1_data_out;
reg    m_axis_video_V_strb_V_1_vld_in;
wire    m_axis_video_V_strb_V_1_vld_out;
wire    m_axis_video_V_strb_V_1_ack_in;
wire    m_axis_video_V_strb_V_1_ack_out;
reg    m_axis_video_V_strb_V_1_sel_rd;
wire    m_axis_video_V_strb_V_1_sel;
reg   [1:0] m_axis_video_V_strb_V_1_state;
reg   [0:0] m_axis_video_V_user_V_1_data_out;
reg    m_axis_video_V_user_V_1_vld_in;
wire    m_axis_video_V_user_V_1_vld_out;
wire    m_axis_video_V_user_V_1_ack_in;
wire    m_axis_video_V_user_V_1_ack_out;
reg   [0:0] m_axis_video_V_user_V_1_payload_A;
reg   [0:0] m_axis_video_V_user_V_1_payload_B;
reg    m_axis_video_V_user_V_1_sel_rd;
reg    m_axis_video_V_user_V_1_sel_wr;
wire    m_axis_video_V_user_V_1_sel;
wire    m_axis_video_V_user_V_1_load_A;
wire    m_axis_video_V_user_V_1_load_B;
reg   [1:0] m_axis_video_V_user_V_1_state;
wire    m_axis_video_V_user_V_1_state_cmp_full;
reg   [0:0] m_axis_video_V_last_V_1_data_out;
reg    m_axis_video_V_last_V_1_vld_in;
wire    m_axis_video_V_last_V_1_vld_out;
wire    m_axis_video_V_last_V_1_ack_in;
wire    m_axis_video_V_last_V_1_ack_out;
reg   [0:0] m_axis_video_V_last_V_1_payload_A;
reg   [0:0] m_axis_video_V_last_V_1_payload_B;
reg    m_axis_video_V_last_V_1_sel_rd;
reg    m_axis_video_V_last_V_1_sel_wr;
wire    m_axis_video_V_last_V_1_sel;
wire    m_axis_video_V_last_V_1_load_A;
wire    m_axis_video_V_last_V_1_load_B;
reg   [1:0] m_axis_video_V_last_V_1_state;
wire    m_axis_video_V_last_V_1_state_cmp_full;
wire   [0:0] m_axis_video_V_id_V_1_data_out;
reg    m_axis_video_V_id_V_1_vld_in;
wire    m_axis_video_V_id_V_1_vld_out;
wire    m_axis_video_V_id_V_1_ack_in;
wire    m_axis_video_V_id_V_1_ack_out;
reg    m_axis_video_V_id_V_1_sel_rd;
wire    m_axis_video_V_id_V_1_sel;
reg   [1:0] m_axis_video_V_id_V_1_state;
wire   [0:0] m_axis_video_V_dest_V_1_data_out;
reg    m_axis_video_V_dest_V_1_vld_in;
wire    m_axis_video_V_dest_V_1_vld_out;
wire    m_axis_video_V_dest_V_1_ack_in;
wire    m_axis_video_V_dest_V_1_ack_out;
reg    m_axis_video_V_dest_V_1_sel_rd;
wire    m_axis_video_V_dest_V_1_sel;
reg   [1:0] m_axis_video_V_dest_V_1_state;
wire   [7:0] field_V_address0;
reg    field_V_ce0;
wire   [31:0] field_V_q0;
reg    m_axis_video_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter69;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten1_reg_1499;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter68_reg;
reg    ap_enable_reg_pp0_iter70;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter69_reg;
reg   [24:0] indvar_flatten1_reg_240;
reg   [5:0] t_V_reg_251;
reg   [19:0] indvar_flatten_reg_262;
reg   [9:0] t_V_1_reg_273;
reg   [9:0] t_V_2_reg_285;
wire   [0:0] exitcond_flatten1_fu_399_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_state63_pp0_stage0_iter61;
wire    ap_block_state64_pp0_stage0_iter62;
wire    ap_block_state65_pp0_stage0_iter63;
wire    ap_block_state66_pp0_stage0_iter64;
wire    ap_block_state67_pp0_stage0_iter65;
wire    ap_block_state68_pp0_stage0_iter66;
wire    ap_block_state69_pp0_stage0_iter67;
wire    ap_block_state70_pp0_stage0_iter68;
wire    ap_block_state71_pp0_stage0_iter69;
reg    ap_block_state71_io;
wire    ap_block_state72_pp0_stage0_iter70;
reg    ap_block_state72_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter1_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter2_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter3_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter4_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter5_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter6_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter7_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter8_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter9_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter10_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter11_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter12_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter13_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter14_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter15_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter16_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter17_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter18_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter19_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter20_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter21_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter22_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter23_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter24_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter25_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter26_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter27_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter28_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter29_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter30_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter31_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter32_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter33_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter34_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter35_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter36_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter37_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter38_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter39_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter40_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter41_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter42_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter43_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter44_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter45_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter46_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter47_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter48_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter49_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter50_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter51_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter52_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter53_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter54_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter55_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter56_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter57_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter58_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter59_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter60_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter61_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter62_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter63_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter64_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter65_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter66_reg;
reg   [0:0] exitcond_flatten1_reg_1499_pp0_iter67_reg;
wire   [24:0] indvar_flatten_next1_fu_405_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_417_p2;
reg   [0:0] exitcond_flatten_reg_1508;
reg   [0:0] exitcond_flatten_reg_1508_pp0_iter1_reg;
wire   [8:0] x_assign_mid2_v_v_v_fu_457_p3;
reg   [8:0] x_assign_mid2_v_v_v_reg_1513;
wire   [0:0] tmp_1_mid_fu_477_p2;
reg   [0:0] tmp_1_mid_reg_1518;
reg   [0:0] tmp_1_mid_reg_1518_pp0_iter1_reg;
wire   [5:0] t_V_mid2_fu_483_p3;
wire   [9:0] row_V_fu_491_p2;
reg   [9:0] row_V_reg_1528;
wire   [9:0] t_V_1_mid2_fu_511_p3;
reg   [9:0] t_V_1_mid2_reg_1533;
wire   [0:0] tmp_user_V_fu_525_p2;
reg   [0:0] tmp_user_V_reg_1538;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter1_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter2_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter3_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter4_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter5_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter6_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter7_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter8_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter9_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter10_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter11_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter12_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter13_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter14_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter15_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter16_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter17_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter18_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter19_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter20_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter21_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter22_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter23_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter24_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter25_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter26_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter27_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter28_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter29_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter30_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter31_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter32_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter33_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter34_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter35_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter36_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter37_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter38_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter39_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter40_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter41_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter42_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter43_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter44_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter45_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter46_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter47_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter48_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter49_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter50_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter51_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter52_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter53_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter54_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter55_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter56_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter57_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter58_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter59_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter60_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter61_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter62_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter63_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter64_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter65_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter66_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter67_reg;
reg   [0:0] tmp_user_V_reg_1538_pp0_iter68_reg;
wire   [0:0] tmp_last_V_fu_531_p2;
reg   [0:0] tmp_last_V_reg_1543;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter3_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter4_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter5_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter6_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter7_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter8_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter9_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter10_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter11_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter12_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter13_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter14_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter15_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter16_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter17_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter18_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter19_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter20_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter21_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter22_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter23_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter24_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter25_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter26_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter27_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter28_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter29_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter30_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter31_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter32_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter33_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter34_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter35_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter36_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter37_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter38_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter39_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter40_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter41_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter42_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter43_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter44_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter45_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter46_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter47_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter48_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter49_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter50_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter51_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter52_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter53_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter54_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter55_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter56_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter57_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter58_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter59_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter60_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter61_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter62_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter63_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter64_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter65_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter66_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter67_reg;
reg   [0:0] tmp_last_V_reg_1543_pp0_iter68_reg;
wire   [0:0] or_cond_fu_549_p2;
reg   [0:0] or_cond_reg_1548;
reg   [0:0] or_cond_reg_1548_pp0_iter1_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter2_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter3_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter4_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter5_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter6_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter7_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter8_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter9_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter10_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter11_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter12_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter13_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter14_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter15_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter16_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter17_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter18_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter19_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter20_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter21_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter22_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter23_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter24_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter25_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter26_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter27_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter28_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter29_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter30_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter31_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter32_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter33_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter34_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter35_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter36_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter37_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter38_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter39_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter40_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter41_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter42_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter43_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter44_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter45_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter46_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter47_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter48_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter49_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter50_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter51_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter52_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter53_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter54_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter55_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter56_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter57_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter58_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter59_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter60_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter61_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter62_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter63_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter64_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter65_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter66_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter67_reg;
reg   [0:0] or_cond_reg_1548_pp0_iter68_reg;
wire   [13:0] ret_V_2_fu_563_p2;
reg   [13:0] ret_V_2_reg_1552;
wire   [9:0] col_V_fu_569_p2;
wire   [19:0] indvar_flatten_next_fu_581_p3;
wire   [29:0] mul_fu_1462_p2;
reg   [29:0] mul_reg_1567;
wire   [29:0] mul2_fu_1468_p2;
reg   [29:0] mul2_reg_1577;
reg   [5:0] tmp_34_reg_1582;
wire   [9:0] tmp_31_fu_671_p2;
reg   [9:0] tmp_31_reg_1587;
reg   [9:0] tmp_31_reg_1587_pp0_iter3_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter4_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter5_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter6_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter7_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter8_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter9_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter10_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter11_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter12_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter13_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter14_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter15_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter16_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter17_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter18_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter19_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter20_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter21_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter22_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter23_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter24_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter25_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter26_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter27_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter28_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter29_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter30_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter31_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter32_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter33_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter34_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter35_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter36_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter37_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter38_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter39_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter40_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter41_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter42_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter43_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter44_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter45_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter46_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter47_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter48_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter49_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter50_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter51_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter52_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter53_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter54_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter55_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter56_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter57_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter58_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter59_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter60_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter61_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter62_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter63_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter64_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter65_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter66_reg;
reg   [9:0] tmp_31_reg_1587_pp0_iter67_reg;
wire   [63:0] grp_fu_367_p1;
reg   [63:0] x_assign_mid2_v_reg_1592;
wire   [63:0] grp_fu_362_p2;
reg   [63:0] x_assign_mid2_reg_1597;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter38_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter39_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter40_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter41_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter42_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter43_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter44_reg;
reg   [63:0] x_assign_mid2_reg_1597_pp0_iter45_reg;
reg   [0:0] tmp_1_reg_1603;
wire   [31:0] p_Val2_18_fu_798_p3;
reg   [31:0] p_Val2_18_reg_1608;
wire   [31:0] p_Val2_19_fu_811_p3;
reg   [31:0] p_Val2_19_reg_1614;
wire   [0:0] sel_tmp_fu_817_p2;
reg   [0:0] sel_tmp_reg_1626;
reg   [0:0] sel_tmp_reg_1626_pp0_iter41_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter42_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter43_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter44_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter45_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter46_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter47_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter48_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter49_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter50_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter51_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter52_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter53_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter54_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter55_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter56_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter57_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter58_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter59_reg;
reg   [0:0] sel_tmp_reg_1626_pp0_iter60_reg;
wire   [0:0] sel_tmp2_fu_822_p2;
reg   [0:0] sel_tmp2_reg_1633;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter41_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter42_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter43_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter44_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter45_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter46_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter47_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter48_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter49_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter50_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter51_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter52_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter53_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter54_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter55_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter56_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter57_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter58_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter59_reg;
reg   [0:0] sel_tmp2_reg_1633_pp0_iter60_reg;
wire   [0:0] sel_tmp4_fu_827_p2;
reg   [0:0] sel_tmp4_reg_1640;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter41_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter42_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter43_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter44_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter45_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter46_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter47_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter48_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter49_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter50_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter51_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter52_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter53_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter54_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter55_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter56_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter57_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter58_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter59_reg;
reg   [0:0] sel_tmp4_reg_1640_pp0_iter60_reg;
wire   [0:0] sel_tmp6_fu_832_p2;
reg   [0:0] sel_tmp6_reg_1647;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter41_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter42_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter43_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter44_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter45_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter46_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter47_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter48_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter49_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter50_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter51_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter52_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter53_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter54_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter55_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter56_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter57_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter58_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter59_reg;
reg   [0:0] sel_tmp6_reg_1647_pp0_iter60_reg;
wire   [0:0] sel_tmp8_fu_837_p2;
reg   [0:0] sel_tmp8_reg_1654;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter41_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter42_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter43_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter44_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter45_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter46_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter47_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter48_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter49_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter50_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter51_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter52_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter53_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter54_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter55_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter56_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter57_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter58_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter59_reg;
reg   [0:0] sel_tmp8_reg_1654_pp0_iter60_reg;
wire   [0:0] sel_tmp11_fu_852_p2;
reg   [0:0] sel_tmp11_reg_1661;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter41_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter42_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter43_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter44_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter45_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter46_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter47_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter48_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter49_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter50_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter51_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter52_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter53_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter54_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter55_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter56_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter57_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter58_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter59_reg;
reg   [0:0] sel_tmp11_reg_1661_pp0_iter60_reg;
wire   [63:0] grp_fu_370_p1;
reg   [63:0] tmp_s_reg_1668;
wire   [63:0] grp_fu_333_p2;
reg   [63:0] f_reg_1673;
wire   [63:0] grp_fu_337_p2;
reg   [63:0] q_reg_1678;
reg   [63:0] q_reg_1678_pp0_iter56_reg;
reg   [63:0] q_reg_1678_pp0_iter57_reg;
reg   [63:0] q_reg_1678_pp0_iter58_reg;
reg   [63:0] q_reg_1678_pp0_iter59_reg;
reg   [63:0] q_reg_1678_pp0_iter60_reg;
wire   [63:0] grp_fu_342_p2;
reg   [63:0] t_reg_1686;
wire   [63:0] r_3_fu_898_p3;
reg   [63:0] r_3_reg_1693;
wire   [63:0] g_3_fu_935_p3;
reg   [63:0] g_3_reg_1698;
wire   [63:0] b_3_fu_969_p3;
reg   [63:0] b_3_reg_1703;
wire   [63:0] grp_fu_347_p2;
reg   [63:0] x_assign_1_reg_1708;
wire   [63:0] grp_fu_352_p2;
reg   [63:0] x_assign_2_reg_1713;
wire   [63:0] grp_fu_357_p2;
reg   [63:0] x_assign_3_reg_1718;
reg   [0:0] p_Result_s_reg_1728;
wire   [7:0] tmp_24_fu_1117_p3;
reg   [7:0] tmp_24_reg_1733;
reg   [0:0] p_Result_1_reg_1739;
wire   [31:0] p_Val2_20_fu_1246_p3;
reg   [31:0] p_Val2_20_reg_1744;
reg   [0:0] p_Result_2_reg_1750;
wire   [31:0] p_Val2_22_fu_1375_p3;
reg   [31:0] p_Val2_22_reg_1755;
wire   [0:0] tmp_35_fu_1383_p3;
wire   [23:0] tmp_data_V_fu_1451_p4;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg   [9:0] ap_phi_mux_t_V_1_phi_fu_277_p4;
reg   [7:0] ap_phi_mux_pixel_R_phi_fu_299_p6;
wire   [7:0] tmp_23_fu_1412_p3;
wire   [7:0] ap_phi_reg_pp0_iter69_pixel_R_reg_296;
reg   [31:0] ap_phi_mux_G_2_phi_fu_312_p6;
wire   [31:0] p_Val2_21_fu_1424_p3;
wire   [31:0] ap_phi_reg_pp0_iter69_G_2_reg_309;
wire   [31:0] G_cast_cast_fu_1397_p3;
reg   [31:0] ap_phi_mux_B_2_phi_fu_324_p6;
wire   [31:0] p_Val2_23_fu_1436_p3;
wire   [31:0] ap_phi_reg_pp0_iter69_B_2_reg_321;
wire   [63:0] tmp_41_cast_fu_992_p1;
reg   [63:0] b_2_fu_186;
reg   [63:0] g_2_fu_190;
reg   [63:0] r_2_fu_194;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] grp_fu_367_p0;
wire   [6:0] p_shl2_fu_381_p3;
wire   [8:0] p_shl_fu_373_p3;
wire   [8:0] p_shl2_cast_fu_389_p1;
wire   [5:0] frame_V_fu_411_p2;
wire   [6:0] p_shl2_mid1_fu_439_p3;
wire   [8:0] p_shl_mid1_fu_431_p3;
wire   [8:0] p_shl2_cast_mid1_fu_447_p1;
wire   [8:0] ret_V_mid1_fu_451_p2;
wire   [8:0] ret_V_fu_393_p2;
wire   [0:0] tmp_3_fu_471_p2;
wire   [0:0] not_exitcond_flatten_fu_465_p2;
wire   [9:0] t_V_1_mid_fu_423_p3;
wire   [0:0] tmp_fu_497_p2;
wire   [9:0] t_V_2_mid2_fu_503_p3;
wire   [9:0] tmp_2_fu_519_p2;
wire   [0:0] tmp_6_fu_537_p2;
wire   [0:0] tmp_9_fu_543_p2;
wire   [13:0] ret_V_1_fu_555_p3;
wire   [19:0] indvar_flatten_op_fu_575_p2;
wire   [13:0] tmp_8_fu_589_p3;
wire   [13:0] tmp_8_mid1_fu_605_p3;
wire   [29:0] mul4_fu_1474_p2;
wire   [5:0] tmp_5_fu_637_p4;
wire   [5:0] tmp_4_fu_628_p4;
wire   [5:0] tmp_11_fu_646_p3;
wire   [5:0] tmp_12_fu_653_p3;
wire   [9:0] tmp_21_cast_fu_660_p3;
wire  signed [9:0] tmp_12_cast_fu_668_p1;
wire   [63:0] val_assign_mid2_fu_677_p1;
wire   [51:0] tmp_V_1_fu_698_p1;
wire   [53:0] mantissa_V_fu_702_p4;
wire   [10:0] tmp_V_fu_688_p4;
wire   [11:0] tmp_i_i_i_i_cast_fu_716_p1;
wire   [11:0] sh_assign_fu_720_p2;
wire   [10:0] tmp_i_i_i_fu_734_p2;
wire   [0:0] isNeg_fu_726_p3;
wire  signed [11:0] tmp_i_i_i_cast_fu_740_p1;
wire   [11:0] ush_fu_744_p3;
wire  signed [31:0] sh_assign_2_cast_fu_752_p1;
wire   [53:0] tmp_i_i_i_cast_10_fu_760_p1;
wire   [136:0] mantissa_V_1_cast_fu_712_p1;
wire   [136:0] tmp_i_i_i_9_fu_756_p1;
wire   [53:0] r_V_fu_764_p2;
wire   [0:0] tmp_16_fu_776_p3;
wire   [136:0] r_V_1_fu_770_p2;
wire   [31:0] tmp_13_fu_784_p1;
wire   [31:0] tmp_15_fu_788_p4;
wire   [31:0] result_V_1_fu_806_p2;
wire   [0:0] sel_tmp5_fu_842_p2;
wire   [0:0] sel_tmp10_fu_847_p2;
wire   [63:0] sel_tmp1_fu_867_p3;
wire   [0:0] tmp_10_fu_880_p2;
wire   [63:0] sel_tmp3_fu_874_p3;
wire   [63:0] sel_tmp7_fu_884_p3;
wire   [63:0] sel_tmp9_fu_892_p3;
wire   [0:0] tmp_17_fu_905_p2;
wire   [63:0] sel_tmp12_fu_909_p3;
wire   [0:0] tmp_18_fu_923_p2;
wire   [63:0] sel_tmp13_fu_917_p3;
wire   [63:0] sel_tmp14_fu_927_p3;
wire   [0:0] tmp_19_fu_947_p2;
wire   [63:0] sel_tmp15_fu_941_p3;
wire   [63:0] sel_tmp16_fu_951_p3;
wire   [0:0] tmp_20_fu_965_p2;
wire   [63:0] sel_tmp17_fu_959_p3;
wire   [63:0] p_Val2_s_fu_996_p1;
wire   [51:0] tmp_V_3_fu_1017_p1;
wire   [53:0] mantissa_V_1_fu_1021_p4;
wire   [10:0] tmp_V_2_fu_1007_p4;
wire   [11:0] tmp_i_i_i_i1_cast_fu_1035_p1;
wire   [11:0] sh_assign_3_fu_1039_p2;
wire   [10:0] tmp_i_i_i1_fu_1053_p2;
wire   [0:0] isNeg_1_fu_1045_p3;
wire  signed [11:0] tmp_i_i_i1_cast_fu_1059_p1;
wire   [11:0] ush_1_fu_1063_p3;
wire  signed [31:0] sh_assign_5_cast_fu_1071_p1;
wire   [53:0] tmp_i_i_i1_cast_12_fu_1079_p1;
wire   [136:0] mantissa_V_3_cast_fu_1031_p1;
wire   [136:0] tmp_i_i_i1_11_fu_1075_p1;
wire   [53:0] r_V_2_fu_1083_p2;
wire   [0:0] tmp_25_fu_1095_p3;
wire   [136:0] r_V_3_fu_1089_p2;
wire   [7:0] tmp_21_fu_1103_p1;
wire   [7:0] tmp_22_fu_1107_p4;
wire   [63:0] p_Val2_8_fu_1125_p1;
wire   [51:0] tmp_V_5_fu_1146_p1;
wire   [53:0] mantissa_V_2_fu_1150_p4;
wire   [10:0] tmp_V_4_fu_1136_p4;
wire   [11:0] tmp_i_i_i_i2_cast_fu_1164_p1;
wire   [11:0] sh_assign_6_fu_1168_p2;
wire   [10:0] tmp_i_i_i2_fu_1182_p2;
wire   [0:0] isNeg_2_fu_1174_p3;
wire  signed [11:0] tmp_i_i_i2_cast_fu_1188_p1;
wire   [11:0] ush_2_fu_1192_p3;
wire  signed [31:0] sh_assign_8_cast_fu_1200_p1;
wire   [53:0] tmp_i_i_i2_cast_14_fu_1208_p1;
wire   [136:0] mantissa_V_5_cast_fu_1160_p1;
wire   [136:0] tmp_i_i_i2_13_fu_1204_p1;
wire   [53:0] r_V_4_fu_1212_p2;
wire   [0:0] tmp_29_fu_1224_p3;
wire   [136:0] r_V_5_fu_1218_p2;
wire   [31:0] tmp_26_fu_1232_p1;
wire   [31:0] tmp_27_fu_1236_p4;
wire   [63:0] p_Val2_13_fu_1254_p1;
wire   [51:0] tmp_V_7_fu_1275_p1;
wire   [53:0] mantissa_V_3_fu_1279_p4;
wire   [10:0] tmp_V_6_fu_1265_p4;
wire   [11:0] tmp_i_i_i_i3_cast_fu_1293_p1;
wire   [11:0] sh_assign_9_fu_1297_p2;
wire   [10:0] tmp_i_i_i3_fu_1311_p2;
wire   [0:0] isNeg_3_fu_1303_p3;
wire  signed [11:0] tmp_i_i_i3_cast_fu_1317_p1;
wire   [11:0] ush_3_fu_1321_p3;
wire  signed [31:0] sh_assign_11_cast_fu_1329_p1;
wire   [53:0] tmp_i_i_i3_cast_16_fu_1337_p1;
wire   [136:0] mantissa_V_7_cast_fu_1289_p1;
wire   [136:0] tmp_i_i_i3_15_fu_1333_p1;
wire   [53:0] r_V_6_fu_1341_p2;
wire   [0:0] tmp_33_fu_1353_p3;
wire   [136:0] r_V_7_fu_1347_p2;
wire   [31:0] tmp_28_fu_1361_p1;
wire   [31:0] tmp_30_fu_1365_p4;
wire   [0:0] tmp_14_fu_1391_p2;
wire   [7:0] result_V_3_fu_1407_p2;
wire   [31:0] result_V_4_fu_1419_p2;
wire   [31:0] result_V_6_fu_1431_p2;
wire   [7:0] tmp_37_fu_1447_p1;
wire   [7:0] pixel_G_fu_1443_p1;
wire   [13:0] mul_fu_1462_p0;
wire   [15:0] mul_fu_1462_p1;
wire   [13:0] mul2_fu_1468_p0;
wire   [15:0] mul2_fu_1468_p1;
wire   [13:0] mul4_fu_1474_p0;
wire   [15:0] mul4_fu_1474_p1;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_342_ce;
reg    grp_fu_347_ce;
reg    grp_fu_352_ce;
reg    grp_fu_357_ce;
reg    grp_fu_362_ce;
reg    grp_fu_367_ce;
reg    grp_fu_370_ce;
wire    ap_CS_fsm_state73;
reg    ap_block_state73;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [29:0] mul2_fu_1468_p00;
wire   [29:0] mul4_fu_1474_p00;
wire   [29:0] mul_fu_1462_p00;
reg    ap_condition_449;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 m_axis_video_V_data_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_data_V_1_sel_wr = 1'b0;
#0 m_axis_video_V_data_V_1_state = 2'd0;
#0 m_axis_video_V_keep_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_keep_V_1_state = 2'd0;
#0 m_axis_video_V_strb_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_strb_V_1_state = 2'd0;
#0 m_axis_video_V_user_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_user_V_1_sel_wr = 1'b0;
#0 m_axis_video_V_user_V_1_state = 2'd0;
#0 m_axis_video_V_last_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_last_V_1_sel_wr = 1'b0;
#0 m_axis_video_V_last_V_1_state = 2'd0;
#0 m_axis_video_V_id_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_id_V_1_state = 2'd0;
#0 m_axis_video_V_dest_V_1_sel_rd = 1'b0;
#0 m_axis_video_V_dest_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
end

snake_output_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
snake_output_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .field_V_address0(field_V_address0),
    .field_V_ce0(field_V_ce0),
    .field_V_q0(field_V_q0)
);

snake_output_dsubbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dsubbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_assign_mid2_reg_1597_pp0_iter45_reg),
    .din1(tmp_s_reg_1668),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

snake_output_dsubbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dsubbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(64'd4607182418800017408),
    .din1(f_reg_1673),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

snake_output_dsubbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dsubbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(64'd4607182418800017408),
    .din1(q_reg_1678),
    .ce(grp_fu_342_ce),
    .dout(grp_fu_342_p2)
);

snake_output_dmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dmulcud_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_3_reg_1693),
    .din1(64'd4643176031446892544),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p2)
);

snake_output_dmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dmulcud_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(g_3_reg_1698),
    .din1(64'd4643176031446892544),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p2)
);

snake_output_dmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_dmulcud_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(b_3_reg_1703),
    .din1(64'd4643176031446892544),
    .ce(grp_fu_357_ce),
    .dout(grp_fu_357_p2)
);

snake_output_ddivdEe #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_ddivdEe_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_assign_mid2_v_reg_1592),
    .din1(64'd4633641066610819072),
    .ce(grp_fu_362_ce),
    .dout(grp_fu_362_p2)
);

snake_output_sitoeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
snake_output_sitoeOg_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_367_p0),
    .ce(grp_fu_367_ce),
    .dout(grp_fu_367_p1)
);

snake_output_sitofYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
snake_output_sitofYi_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_Val2_19_reg_1614),
    .ce(grp_fu_370_ce),
    .dout(grp_fu_370_p1)
);

snake_output_mul_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
snake_output_mul_g8j_U10(
    .din0(mul_fu_1462_p0),
    .din1(mul_fu_1462_p1),
    .dout(mul_fu_1462_p2)
);

snake_output_mul_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
snake_output_mul_g8j_U11(
    .din0(mul2_fu_1468_p0),
    .din1(mul2_fu_1468_p1),
    .dout(mul2_fu_1468_p2)
);

snake_output_mul_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
snake_output_mul_g8j_U12(
    .din0(mul4_fu_1474_p0),
    .din1(mul4_fu_1474_p1),
    .dout(mul4_fu_1474_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten1_fu_399_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter70 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_data_V_1_ack_out == 1'b1) & (m_axis_video_V_data_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_data_V_1_sel_rd <= ~m_axis_video_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_video_V_data_V_1_ack_in == 1'b1) & (m_axis_video_V_data_V_1_vld_in == 1'b1))) begin
            m_axis_video_V_data_V_1_sel_wr <= ~m_axis_video_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_data_V_1_state == 2'd2) & (m_axis_video_V_data_V_1_vld_in == 1'b0)) | ((m_axis_video_V_data_V_1_state == 2'd3) & (m_axis_video_V_data_V_1_vld_in == 1'b0) & (m_axis_video_V_data_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_data_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_data_V_1_state == 2'd1) & (m_axis_video_V_data_V_1_ack_out == 1'b0)) | ((m_axis_video_V_data_V_1_state == 2'd3) & (m_axis_video_V_data_V_1_ack_out == 1'b0) & (m_axis_video_V_data_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_data_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_data_V_1_vld_in == 1'b0) & (m_axis_video_V_data_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_data_V_1_ack_out == 1'b0) & (m_axis_video_V_data_V_1_vld_in == 1'b1)) & (m_axis_video_V_data_V_1_state == 2'd3)) | ((m_axis_video_V_data_V_1_state == 2'd1) & (m_axis_video_V_data_V_1_ack_out == 1'b1)) | ((m_axis_video_V_data_V_1_state == 2'd2) & (m_axis_video_V_data_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_data_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_dest_V_1_ack_out == 1'b1) & (m_axis_video_V_dest_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_dest_V_1_sel_rd <= ~m_axis_video_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_dest_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_dest_V_1_state == 2'd2) & (m_axis_video_V_dest_V_1_vld_in == 1'b0)) | ((m_axis_video_V_dest_V_1_state == 2'd3) & (m_axis_video_V_dest_V_1_vld_in == 1'b0) & (m_axis_video_V_dest_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_dest_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_dest_V_1_state == 2'd1) & (m_axis_video_V_dest_V_1_ack_out == 1'b0)) | ((m_axis_video_V_dest_V_1_state == 2'd3) & (m_axis_video_V_dest_V_1_ack_out == 1'b0) & (m_axis_video_V_dest_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_dest_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_dest_V_1_vld_in == 1'b0) & (m_axis_video_V_dest_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_dest_V_1_ack_out == 1'b0) & (m_axis_video_V_dest_V_1_vld_in == 1'b1)) & (m_axis_video_V_dest_V_1_state == 2'd3)) | ((m_axis_video_V_dest_V_1_state == 2'd1) & (m_axis_video_V_dest_V_1_ack_out == 1'b1)) | ((m_axis_video_V_dest_V_1_state == 2'd2) & (m_axis_video_V_dest_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_dest_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_dest_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_id_V_1_ack_out == 1'b1) & (m_axis_video_V_id_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_id_V_1_sel_rd <= ~m_axis_video_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_id_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_id_V_1_state == 2'd2) & (m_axis_video_V_id_V_1_vld_in == 1'b0)) | ((m_axis_video_V_id_V_1_state == 2'd3) & (m_axis_video_V_id_V_1_vld_in == 1'b0) & (m_axis_video_V_id_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_id_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_id_V_1_state == 2'd1) & (m_axis_video_V_id_V_1_ack_out == 1'b0)) | ((m_axis_video_V_id_V_1_state == 2'd3) & (m_axis_video_V_id_V_1_ack_out == 1'b0) & (m_axis_video_V_id_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_id_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_id_V_1_vld_in == 1'b0) & (m_axis_video_V_id_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_id_V_1_ack_out == 1'b0) & (m_axis_video_V_id_V_1_vld_in == 1'b1)) & (m_axis_video_V_id_V_1_state == 2'd3)) | ((m_axis_video_V_id_V_1_state == 2'd1) & (m_axis_video_V_id_V_1_ack_out == 1'b1)) | ((m_axis_video_V_id_V_1_state == 2'd2) & (m_axis_video_V_id_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_id_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_id_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_keep_V_1_ack_out == 1'b1) & (m_axis_video_V_keep_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_keep_V_1_sel_rd <= ~m_axis_video_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_keep_V_1_state == 2'd2) & (m_axis_video_V_keep_V_1_vld_in == 1'b0)) | ((m_axis_video_V_keep_V_1_state == 2'd3) & (m_axis_video_V_keep_V_1_vld_in == 1'b0) & (m_axis_video_V_keep_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_keep_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_keep_V_1_state == 2'd1) & (m_axis_video_V_keep_V_1_ack_out == 1'b0)) | ((m_axis_video_V_keep_V_1_state == 2'd3) & (m_axis_video_V_keep_V_1_ack_out == 1'b0) & (m_axis_video_V_keep_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_keep_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_keep_V_1_vld_in == 1'b0) & (m_axis_video_V_keep_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_keep_V_1_ack_out == 1'b0) & (m_axis_video_V_keep_V_1_vld_in == 1'b1)) & (m_axis_video_V_keep_V_1_state == 2'd3)) | ((m_axis_video_V_keep_V_1_state == 2'd1) & (m_axis_video_V_keep_V_1_ack_out == 1'b1)) | ((m_axis_video_V_keep_V_1_state == 2'd2) & (m_axis_video_V_keep_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_keep_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_last_V_1_ack_out == 1'b1) & (m_axis_video_V_last_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_last_V_1_sel_rd <= ~m_axis_video_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_video_V_last_V_1_ack_in == 1'b1) & (m_axis_video_V_last_V_1_vld_in == 1'b1))) begin
            m_axis_video_V_last_V_1_sel_wr <= ~m_axis_video_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_last_V_1_state == 2'd2) & (m_axis_video_V_last_V_1_vld_in == 1'b0)) | ((m_axis_video_V_last_V_1_state == 2'd3) & (m_axis_video_V_last_V_1_vld_in == 1'b0) & (m_axis_video_V_last_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_last_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_last_V_1_state == 2'd1) & (m_axis_video_V_last_V_1_ack_out == 1'b0)) | ((m_axis_video_V_last_V_1_state == 2'd3) & (m_axis_video_V_last_V_1_ack_out == 1'b0) & (m_axis_video_V_last_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_last_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_last_V_1_vld_in == 1'b0) & (m_axis_video_V_last_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_last_V_1_ack_out == 1'b0) & (m_axis_video_V_last_V_1_vld_in == 1'b1)) & (m_axis_video_V_last_V_1_state == 2'd3)) | ((m_axis_video_V_last_V_1_state == 2'd1) & (m_axis_video_V_last_V_1_ack_out == 1'b1)) | ((m_axis_video_V_last_V_1_state == 2'd2) & (m_axis_video_V_last_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_last_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_strb_V_1_ack_out == 1'b1) & (m_axis_video_V_strb_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_strb_V_1_sel_rd <= ~m_axis_video_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_strb_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_strb_V_1_state == 2'd2) & (m_axis_video_V_strb_V_1_vld_in == 1'b0)) | ((m_axis_video_V_strb_V_1_state == 2'd3) & (m_axis_video_V_strb_V_1_vld_in == 1'b0) & (m_axis_video_V_strb_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_strb_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_strb_V_1_state == 2'd1) & (m_axis_video_V_strb_V_1_ack_out == 1'b0)) | ((m_axis_video_V_strb_V_1_state == 2'd3) & (m_axis_video_V_strb_V_1_ack_out == 1'b0) & (m_axis_video_V_strb_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_strb_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_strb_V_1_vld_in == 1'b0) & (m_axis_video_V_strb_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_strb_V_1_ack_out == 1'b0) & (m_axis_video_V_strb_V_1_vld_in == 1'b1)) & (m_axis_video_V_strb_V_1_state == 2'd3)) | ((m_axis_video_V_strb_V_1_state == 2'd1) & (m_axis_video_V_strb_V_1_ack_out == 1'b1)) | ((m_axis_video_V_strb_V_1_state == 2'd2) & (m_axis_video_V_strb_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_strb_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_strb_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_video_V_user_V_1_ack_out == 1'b1) & (m_axis_video_V_user_V_1_vld_out == 1'b1))) begin
            m_axis_video_V_user_V_1_sel_rd <= ~m_axis_video_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_video_V_user_V_1_ack_in == 1'b1) & (m_axis_video_V_user_V_1_vld_in == 1'b1))) begin
            m_axis_video_V_user_V_1_sel_wr <= ~m_axis_video_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        m_axis_video_V_user_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_video_V_user_V_1_state == 2'd2) & (m_axis_video_V_user_V_1_vld_in == 1'b0)) | ((m_axis_video_V_user_V_1_state == 2'd3) & (m_axis_video_V_user_V_1_vld_in == 1'b0) & (m_axis_video_V_user_V_1_ack_out == 1'b1)))) begin
            m_axis_video_V_user_V_1_state <= 2'd2;
        end else if ((((m_axis_video_V_user_V_1_state == 2'd1) & (m_axis_video_V_user_V_1_ack_out == 1'b0)) | ((m_axis_video_V_user_V_1_state == 2'd3) & (m_axis_video_V_user_V_1_ack_out == 1'b0) & (m_axis_video_V_user_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_user_V_1_state <= 2'd1;
        end else if (((~((m_axis_video_V_user_V_1_vld_in == 1'b0) & (m_axis_video_V_user_V_1_ack_out == 1'b1)) & ~((m_axis_video_V_user_V_1_ack_out == 1'b0) & (m_axis_video_V_user_V_1_vld_in == 1'b1)) & (m_axis_video_V_user_V_1_state == 2'd3)) | ((m_axis_video_V_user_V_1_state == 2'd1) & (m_axis_video_V_user_V_1_ack_out == 1'b1)) | ((m_axis_video_V_user_V_1_state == 2'd2) & (m_axis_video_V_user_V_1_vld_in == 1'b1)))) begin
            m_axis_video_V_user_V_1_state <= 2'd3;
        end else begin
            m_axis_video_V_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten1_reg_240 <= indvar_flatten_next1_fu_405_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_240 <= 25'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_262 <= indvar_flatten_next_fu_581_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_262 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        t_V_1_reg_273 <= t_V_1_mid2_reg_1533;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_1_reg_273 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_2_reg_285 <= col_V_fu_569_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_2_reg_285 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_reg_251 <= t_V_mid2_fu_483_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_251 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter60_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter60_reg == 1'd0) & (ap_enable_reg_pp0_iter61 == 1'b1))) begin
        b_2_fu_186 <= b_3_fu_969_p3;
        g_2_fu_190 <= g_3_fu_935_p3;
        r_2_fu_194 <= r_3_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter60_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter60_reg == 1'd0))) begin
        b_3_reg_1703 <= b_3_fu_969_p3;
        g_3_reg_1698 <= g_3_fu_935_p3;
        r_3_reg_1693 <= r_3_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten1_reg_1499 <= exitcond_flatten1_fu_399_p2;
        exitcond_flatten1_reg_1499_pp0_iter1_reg <= exitcond_flatten1_reg_1499;
        exitcond_flatten_reg_1508_pp0_iter1_reg <= exitcond_flatten_reg_1508;
        or_cond_reg_1548_pp0_iter1_reg <= or_cond_reg_1548;
        tmp_1_mid_reg_1518_pp0_iter1_reg <= tmp_1_mid_reg_1518;
        tmp_last_V_reg_1543_pp0_iter1_reg <= tmp_last_V_reg_1543;
        tmp_user_V_reg_1538_pp0_iter1_reg <= tmp_user_V_reg_1538;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten1_reg_1499_pp0_iter10_reg <= exitcond_flatten1_reg_1499_pp0_iter9_reg;
        exitcond_flatten1_reg_1499_pp0_iter11_reg <= exitcond_flatten1_reg_1499_pp0_iter10_reg;
        exitcond_flatten1_reg_1499_pp0_iter12_reg <= exitcond_flatten1_reg_1499_pp0_iter11_reg;
        exitcond_flatten1_reg_1499_pp0_iter13_reg <= exitcond_flatten1_reg_1499_pp0_iter12_reg;
        exitcond_flatten1_reg_1499_pp0_iter14_reg <= exitcond_flatten1_reg_1499_pp0_iter13_reg;
        exitcond_flatten1_reg_1499_pp0_iter15_reg <= exitcond_flatten1_reg_1499_pp0_iter14_reg;
        exitcond_flatten1_reg_1499_pp0_iter16_reg <= exitcond_flatten1_reg_1499_pp0_iter15_reg;
        exitcond_flatten1_reg_1499_pp0_iter17_reg <= exitcond_flatten1_reg_1499_pp0_iter16_reg;
        exitcond_flatten1_reg_1499_pp0_iter18_reg <= exitcond_flatten1_reg_1499_pp0_iter17_reg;
        exitcond_flatten1_reg_1499_pp0_iter19_reg <= exitcond_flatten1_reg_1499_pp0_iter18_reg;
        exitcond_flatten1_reg_1499_pp0_iter20_reg <= exitcond_flatten1_reg_1499_pp0_iter19_reg;
        exitcond_flatten1_reg_1499_pp0_iter21_reg <= exitcond_flatten1_reg_1499_pp0_iter20_reg;
        exitcond_flatten1_reg_1499_pp0_iter22_reg <= exitcond_flatten1_reg_1499_pp0_iter21_reg;
        exitcond_flatten1_reg_1499_pp0_iter23_reg <= exitcond_flatten1_reg_1499_pp0_iter22_reg;
        exitcond_flatten1_reg_1499_pp0_iter24_reg <= exitcond_flatten1_reg_1499_pp0_iter23_reg;
        exitcond_flatten1_reg_1499_pp0_iter25_reg <= exitcond_flatten1_reg_1499_pp0_iter24_reg;
        exitcond_flatten1_reg_1499_pp0_iter26_reg <= exitcond_flatten1_reg_1499_pp0_iter25_reg;
        exitcond_flatten1_reg_1499_pp0_iter27_reg <= exitcond_flatten1_reg_1499_pp0_iter26_reg;
        exitcond_flatten1_reg_1499_pp0_iter28_reg <= exitcond_flatten1_reg_1499_pp0_iter27_reg;
        exitcond_flatten1_reg_1499_pp0_iter29_reg <= exitcond_flatten1_reg_1499_pp0_iter28_reg;
        exitcond_flatten1_reg_1499_pp0_iter2_reg <= exitcond_flatten1_reg_1499_pp0_iter1_reg;
        exitcond_flatten1_reg_1499_pp0_iter30_reg <= exitcond_flatten1_reg_1499_pp0_iter29_reg;
        exitcond_flatten1_reg_1499_pp0_iter31_reg <= exitcond_flatten1_reg_1499_pp0_iter30_reg;
        exitcond_flatten1_reg_1499_pp0_iter32_reg <= exitcond_flatten1_reg_1499_pp0_iter31_reg;
        exitcond_flatten1_reg_1499_pp0_iter33_reg <= exitcond_flatten1_reg_1499_pp0_iter32_reg;
        exitcond_flatten1_reg_1499_pp0_iter34_reg <= exitcond_flatten1_reg_1499_pp0_iter33_reg;
        exitcond_flatten1_reg_1499_pp0_iter35_reg <= exitcond_flatten1_reg_1499_pp0_iter34_reg;
        exitcond_flatten1_reg_1499_pp0_iter36_reg <= exitcond_flatten1_reg_1499_pp0_iter35_reg;
        exitcond_flatten1_reg_1499_pp0_iter37_reg <= exitcond_flatten1_reg_1499_pp0_iter36_reg;
        exitcond_flatten1_reg_1499_pp0_iter38_reg <= exitcond_flatten1_reg_1499_pp0_iter37_reg;
        exitcond_flatten1_reg_1499_pp0_iter39_reg <= exitcond_flatten1_reg_1499_pp0_iter38_reg;
        exitcond_flatten1_reg_1499_pp0_iter3_reg <= exitcond_flatten1_reg_1499_pp0_iter2_reg;
        exitcond_flatten1_reg_1499_pp0_iter40_reg <= exitcond_flatten1_reg_1499_pp0_iter39_reg;
        exitcond_flatten1_reg_1499_pp0_iter41_reg <= exitcond_flatten1_reg_1499_pp0_iter40_reg;
        exitcond_flatten1_reg_1499_pp0_iter42_reg <= exitcond_flatten1_reg_1499_pp0_iter41_reg;
        exitcond_flatten1_reg_1499_pp0_iter43_reg <= exitcond_flatten1_reg_1499_pp0_iter42_reg;
        exitcond_flatten1_reg_1499_pp0_iter44_reg <= exitcond_flatten1_reg_1499_pp0_iter43_reg;
        exitcond_flatten1_reg_1499_pp0_iter45_reg <= exitcond_flatten1_reg_1499_pp0_iter44_reg;
        exitcond_flatten1_reg_1499_pp0_iter46_reg <= exitcond_flatten1_reg_1499_pp0_iter45_reg;
        exitcond_flatten1_reg_1499_pp0_iter47_reg <= exitcond_flatten1_reg_1499_pp0_iter46_reg;
        exitcond_flatten1_reg_1499_pp0_iter48_reg <= exitcond_flatten1_reg_1499_pp0_iter47_reg;
        exitcond_flatten1_reg_1499_pp0_iter49_reg <= exitcond_flatten1_reg_1499_pp0_iter48_reg;
        exitcond_flatten1_reg_1499_pp0_iter4_reg <= exitcond_flatten1_reg_1499_pp0_iter3_reg;
        exitcond_flatten1_reg_1499_pp0_iter50_reg <= exitcond_flatten1_reg_1499_pp0_iter49_reg;
        exitcond_flatten1_reg_1499_pp0_iter51_reg <= exitcond_flatten1_reg_1499_pp0_iter50_reg;
        exitcond_flatten1_reg_1499_pp0_iter52_reg <= exitcond_flatten1_reg_1499_pp0_iter51_reg;
        exitcond_flatten1_reg_1499_pp0_iter53_reg <= exitcond_flatten1_reg_1499_pp0_iter52_reg;
        exitcond_flatten1_reg_1499_pp0_iter54_reg <= exitcond_flatten1_reg_1499_pp0_iter53_reg;
        exitcond_flatten1_reg_1499_pp0_iter55_reg <= exitcond_flatten1_reg_1499_pp0_iter54_reg;
        exitcond_flatten1_reg_1499_pp0_iter56_reg <= exitcond_flatten1_reg_1499_pp0_iter55_reg;
        exitcond_flatten1_reg_1499_pp0_iter57_reg <= exitcond_flatten1_reg_1499_pp0_iter56_reg;
        exitcond_flatten1_reg_1499_pp0_iter58_reg <= exitcond_flatten1_reg_1499_pp0_iter57_reg;
        exitcond_flatten1_reg_1499_pp0_iter59_reg <= exitcond_flatten1_reg_1499_pp0_iter58_reg;
        exitcond_flatten1_reg_1499_pp0_iter5_reg <= exitcond_flatten1_reg_1499_pp0_iter4_reg;
        exitcond_flatten1_reg_1499_pp0_iter60_reg <= exitcond_flatten1_reg_1499_pp0_iter59_reg;
        exitcond_flatten1_reg_1499_pp0_iter61_reg <= exitcond_flatten1_reg_1499_pp0_iter60_reg;
        exitcond_flatten1_reg_1499_pp0_iter62_reg <= exitcond_flatten1_reg_1499_pp0_iter61_reg;
        exitcond_flatten1_reg_1499_pp0_iter63_reg <= exitcond_flatten1_reg_1499_pp0_iter62_reg;
        exitcond_flatten1_reg_1499_pp0_iter64_reg <= exitcond_flatten1_reg_1499_pp0_iter63_reg;
        exitcond_flatten1_reg_1499_pp0_iter65_reg <= exitcond_flatten1_reg_1499_pp0_iter64_reg;
        exitcond_flatten1_reg_1499_pp0_iter66_reg <= exitcond_flatten1_reg_1499_pp0_iter65_reg;
        exitcond_flatten1_reg_1499_pp0_iter67_reg <= exitcond_flatten1_reg_1499_pp0_iter66_reg;
        exitcond_flatten1_reg_1499_pp0_iter68_reg <= exitcond_flatten1_reg_1499_pp0_iter67_reg;
        exitcond_flatten1_reg_1499_pp0_iter69_reg <= exitcond_flatten1_reg_1499_pp0_iter68_reg;
        exitcond_flatten1_reg_1499_pp0_iter6_reg <= exitcond_flatten1_reg_1499_pp0_iter5_reg;
        exitcond_flatten1_reg_1499_pp0_iter7_reg <= exitcond_flatten1_reg_1499_pp0_iter6_reg;
        exitcond_flatten1_reg_1499_pp0_iter8_reg <= exitcond_flatten1_reg_1499_pp0_iter7_reg;
        exitcond_flatten1_reg_1499_pp0_iter9_reg <= exitcond_flatten1_reg_1499_pp0_iter8_reg;
        or_cond_reg_1548_pp0_iter10_reg <= or_cond_reg_1548_pp0_iter9_reg;
        or_cond_reg_1548_pp0_iter11_reg <= or_cond_reg_1548_pp0_iter10_reg;
        or_cond_reg_1548_pp0_iter12_reg <= or_cond_reg_1548_pp0_iter11_reg;
        or_cond_reg_1548_pp0_iter13_reg <= or_cond_reg_1548_pp0_iter12_reg;
        or_cond_reg_1548_pp0_iter14_reg <= or_cond_reg_1548_pp0_iter13_reg;
        or_cond_reg_1548_pp0_iter15_reg <= or_cond_reg_1548_pp0_iter14_reg;
        or_cond_reg_1548_pp0_iter16_reg <= or_cond_reg_1548_pp0_iter15_reg;
        or_cond_reg_1548_pp0_iter17_reg <= or_cond_reg_1548_pp0_iter16_reg;
        or_cond_reg_1548_pp0_iter18_reg <= or_cond_reg_1548_pp0_iter17_reg;
        or_cond_reg_1548_pp0_iter19_reg <= or_cond_reg_1548_pp0_iter18_reg;
        or_cond_reg_1548_pp0_iter20_reg <= or_cond_reg_1548_pp0_iter19_reg;
        or_cond_reg_1548_pp0_iter21_reg <= or_cond_reg_1548_pp0_iter20_reg;
        or_cond_reg_1548_pp0_iter22_reg <= or_cond_reg_1548_pp0_iter21_reg;
        or_cond_reg_1548_pp0_iter23_reg <= or_cond_reg_1548_pp0_iter22_reg;
        or_cond_reg_1548_pp0_iter24_reg <= or_cond_reg_1548_pp0_iter23_reg;
        or_cond_reg_1548_pp0_iter25_reg <= or_cond_reg_1548_pp0_iter24_reg;
        or_cond_reg_1548_pp0_iter26_reg <= or_cond_reg_1548_pp0_iter25_reg;
        or_cond_reg_1548_pp0_iter27_reg <= or_cond_reg_1548_pp0_iter26_reg;
        or_cond_reg_1548_pp0_iter28_reg <= or_cond_reg_1548_pp0_iter27_reg;
        or_cond_reg_1548_pp0_iter29_reg <= or_cond_reg_1548_pp0_iter28_reg;
        or_cond_reg_1548_pp0_iter2_reg <= or_cond_reg_1548_pp0_iter1_reg;
        or_cond_reg_1548_pp0_iter30_reg <= or_cond_reg_1548_pp0_iter29_reg;
        or_cond_reg_1548_pp0_iter31_reg <= or_cond_reg_1548_pp0_iter30_reg;
        or_cond_reg_1548_pp0_iter32_reg <= or_cond_reg_1548_pp0_iter31_reg;
        or_cond_reg_1548_pp0_iter33_reg <= or_cond_reg_1548_pp0_iter32_reg;
        or_cond_reg_1548_pp0_iter34_reg <= or_cond_reg_1548_pp0_iter33_reg;
        or_cond_reg_1548_pp0_iter35_reg <= or_cond_reg_1548_pp0_iter34_reg;
        or_cond_reg_1548_pp0_iter36_reg <= or_cond_reg_1548_pp0_iter35_reg;
        or_cond_reg_1548_pp0_iter37_reg <= or_cond_reg_1548_pp0_iter36_reg;
        or_cond_reg_1548_pp0_iter38_reg <= or_cond_reg_1548_pp0_iter37_reg;
        or_cond_reg_1548_pp0_iter39_reg <= or_cond_reg_1548_pp0_iter38_reg;
        or_cond_reg_1548_pp0_iter3_reg <= or_cond_reg_1548_pp0_iter2_reg;
        or_cond_reg_1548_pp0_iter40_reg <= or_cond_reg_1548_pp0_iter39_reg;
        or_cond_reg_1548_pp0_iter41_reg <= or_cond_reg_1548_pp0_iter40_reg;
        or_cond_reg_1548_pp0_iter42_reg <= or_cond_reg_1548_pp0_iter41_reg;
        or_cond_reg_1548_pp0_iter43_reg <= or_cond_reg_1548_pp0_iter42_reg;
        or_cond_reg_1548_pp0_iter44_reg <= or_cond_reg_1548_pp0_iter43_reg;
        or_cond_reg_1548_pp0_iter45_reg <= or_cond_reg_1548_pp0_iter44_reg;
        or_cond_reg_1548_pp0_iter46_reg <= or_cond_reg_1548_pp0_iter45_reg;
        or_cond_reg_1548_pp0_iter47_reg <= or_cond_reg_1548_pp0_iter46_reg;
        or_cond_reg_1548_pp0_iter48_reg <= or_cond_reg_1548_pp0_iter47_reg;
        or_cond_reg_1548_pp0_iter49_reg <= or_cond_reg_1548_pp0_iter48_reg;
        or_cond_reg_1548_pp0_iter4_reg <= or_cond_reg_1548_pp0_iter3_reg;
        or_cond_reg_1548_pp0_iter50_reg <= or_cond_reg_1548_pp0_iter49_reg;
        or_cond_reg_1548_pp0_iter51_reg <= or_cond_reg_1548_pp0_iter50_reg;
        or_cond_reg_1548_pp0_iter52_reg <= or_cond_reg_1548_pp0_iter51_reg;
        or_cond_reg_1548_pp0_iter53_reg <= or_cond_reg_1548_pp0_iter52_reg;
        or_cond_reg_1548_pp0_iter54_reg <= or_cond_reg_1548_pp0_iter53_reg;
        or_cond_reg_1548_pp0_iter55_reg <= or_cond_reg_1548_pp0_iter54_reg;
        or_cond_reg_1548_pp0_iter56_reg <= or_cond_reg_1548_pp0_iter55_reg;
        or_cond_reg_1548_pp0_iter57_reg <= or_cond_reg_1548_pp0_iter56_reg;
        or_cond_reg_1548_pp0_iter58_reg <= or_cond_reg_1548_pp0_iter57_reg;
        or_cond_reg_1548_pp0_iter59_reg <= or_cond_reg_1548_pp0_iter58_reg;
        or_cond_reg_1548_pp0_iter5_reg <= or_cond_reg_1548_pp0_iter4_reg;
        or_cond_reg_1548_pp0_iter60_reg <= or_cond_reg_1548_pp0_iter59_reg;
        or_cond_reg_1548_pp0_iter61_reg <= or_cond_reg_1548_pp0_iter60_reg;
        or_cond_reg_1548_pp0_iter62_reg <= or_cond_reg_1548_pp0_iter61_reg;
        or_cond_reg_1548_pp0_iter63_reg <= or_cond_reg_1548_pp0_iter62_reg;
        or_cond_reg_1548_pp0_iter64_reg <= or_cond_reg_1548_pp0_iter63_reg;
        or_cond_reg_1548_pp0_iter65_reg <= or_cond_reg_1548_pp0_iter64_reg;
        or_cond_reg_1548_pp0_iter66_reg <= or_cond_reg_1548_pp0_iter65_reg;
        or_cond_reg_1548_pp0_iter67_reg <= or_cond_reg_1548_pp0_iter66_reg;
        or_cond_reg_1548_pp0_iter68_reg <= or_cond_reg_1548_pp0_iter67_reg;
        or_cond_reg_1548_pp0_iter6_reg <= or_cond_reg_1548_pp0_iter5_reg;
        or_cond_reg_1548_pp0_iter7_reg <= or_cond_reg_1548_pp0_iter6_reg;
        or_cond_reg_1548_pp0_iter8_reg <= or_cond_reg_1548_pp0_iter7_reg;
        or_cond_reg_1548_pp0_iter9_reg <= or_cond_reg_1548_pp0_iter8_reg;
        q_reg_1678_pp0_iter56_reg <= q_reg_1678;
        q_reg_1678_pp0_iter57_reg <= q_reg_1678_pp0_iter56_reg;
        q_reg_1678_pp0_iter58_reg <= q_reg_1678_pp0_iter57_reg;
        q_reg_1678_pp0_iter59_reg <= q_reg_1678_pp0_iter58_reg;
        q_reg_1678_pp0_iter60_reg <= q_reg_1678_pp0_iter59_reg;
        sel_tmp11_reg_1661_pp0_iter41_reg <= sel_tmp11_reg_1661;
        sel_tmp11_reg_1661_pp0_iter42_reg <= sel_tmp11_reg_1661_pp0_iter41_reg;
        sel_tmp11_reg_1661_pp0_iter43_reg <= sel_tmp11_reg_1661_pp0_iter42_reg;
        sel_tmp11_reg_1661_pp0_iter44_reg <= sel_tmp11_reg_1661_pp0_iter43_reg;
        sel_tmp11_reg_1661_pp0_iter45_reg <= sel_tmp11_reg_1661_pp0_iter44_reg;
        sel_tmp11_reg_1661_pp0_iter46_reg <= sel_tmp11_reg_1661_pp0_iter45_reg;
        sel_tmp11_reg_1661_pp0_iter47_reg <= sel_tmp11_reg_1661_pp0_iter46_reg;
        sel_tmp11_reg_1661_pp0_iter48_reg <= sel_tmp11_reg_1661_pp0_iter47_reg;
        sel_tmp11_reg_1661_pp0_iter49_reg <= sel_tmp11_reg_1661_pp0_iter48_reg;
        sel_tmp11_reg_1661_pp0_iter50_reg <= sel_tmp11_reg_1661_pp0_iter49_reg;
        sel_tmp11_reg_1661_pp0_iter51_reg <= sel_tmp11_reg_1661_pp0_iter50_reg;
        sel_tmp11_reg_1661_pp0_iter52_reg <= sel_tmp11_reg_1661_pp0_iter51_reg;
        sel_tmp11_reg_1661_pp0_iter53_reg <= sel_tmp11_reg_1661_pp0_iter52_reg;
        sel_tmp11_reg_1661_pp0_iter54_reg <= sel_tmp11_reg_1661_pp0_iter53_reg;
        sel_tmp11_reg_1661_pp0_iter55_reg <= sel_tmp11_reg_1661_pp0_iter54_reg;
        sel_tmp11_reg_1661_pp0_iter56_reg <= sel_tmp11_reg_1661_pp0_iter55_reg;
        sel_tmp11_reg_1661_pp0_iter57_reg <= sel_tmp11_reg_1661_pp0_iter56_reg;
        sel_tmp11_reg_1661_pp0_iter58_reg <= sel_tmp11_reg_1661_pp0_iter57_reg;
        sel_tmp11_reg_1661_pp0_iter59_reg <= sel_tmp11_reg_1661_pp0_iter58_reg;
        sel_tmp11_reg_1661_pp0_iter60_reg <= sel_tmp11_reg_1661_pp0_iter59_reg;
        sel_tmp2_reg_1633_pp0_iter41_reg <= sel_tmp2_reg_1633;
        sel_tmp2_reg_1633_pp0_iter42_reg <= sel_tmp2_reg_1633_pp0_iter41_reg;
        sel_tmp2_reg_1633_pp0_iter43_reg <= sel_tmp2_reg_1633_pp0_iter42_reg;
        sel_tmp2_reg_1633_pp0_iter44_reg <= sel_tmp2_reg_1633_pp0_iter43_reg;
        sel_tmp2_reg_1633_pp0_iter45_reg <= sel_tmp2_reg_1633_pp0_iter44_reg;
        sel_tmp2_reg_1633_pp0_iter46_reg <= sel_tmp2_reg_1633_pp0_iter45_reg;
        sel_tmp2_reg_1633_pp0_iter47_reg <= sel_tmp2_reg_1633_pp0_iter46_reg;
        sel_tmp2_reg_1633_pp0_iter48_reg <= sel_tmp2_reg_1633_pp0_iter47_reg;
        sel_tmp2_reg_1633_pp0_iter49_reg <= sel_tmp2_reg_1633_pp0_iter48_reg;
        sel_tmp2_reg_1633_pp0_iter50_reg <= sel_tmp2_reg_1633_pp0_iter49_reg;
        sel_tmp2_reg_1633_pp0_iter51_reg <= sel_tmp2_reg_1633_pp0_iter50_reg;
        sel_tmp2_reg_1633_pp0_iter52_reg <= sel_tmp2_reg_1633_pp0_iter51_reg;
        sel_tmp2_reg_1633_pp0_iter53_reg <= sel_tmp2_reg_1633_pp0_iter52_reg;
        sel_tmp2_reg_1633_pp0_iter54_reg <= sel_tmp2_reg_1633_pp0_iter53_reg;
        sel_tmp2_reg_1633_pp0_iter55_reg <= sel_tmp2_reg_1633_pp0_iter54_reg;
        sel_tmp2_reg_1633_pp0_iter56_reg <= sel_tmp2_reg_1633_pp0_iter55_reg;
        sel_tmp2_reg_1633_pp0_iter57_reg <= sel_tmp2_reg_1633_pp0_iter56_reg;
        sel_tmp2_reg_1633_pp0_iter58_reg <= sel_tmp2_reg_1633_pp0_iter57_reg;
        sel_tmp2_reg_1633_pp0_iter59_reg <= sel_tmp2_reg_1633_pp0_iter58_reg;
        sel_tmp2_reg_1633_pp0_iter60_reg <= sel_tmp2_reg_1633_pp0_iter59_reg;
        sel_tmp4_reg_1640_pp0_iter41_reg <= sel_tmp4_reg_1640;
        sel_tmp4_reg_1640_pp0_iter42_reg <= sel_tmp4_reg_1640_pp0_iter41_reg;
        sel_tmp4_reg_1640_pp0_iter43_reg <= sel_tmp4_reg_1640_pp0_iter42_reg;
        sel_tmp4_reg_1640_pp0_iter44_reg <= sel_tmp4_reg_1640_pp0_iter43_reg;
        sel_tmp4_reg_1640_pp0_iter45_reg <= sel_tmp4_reg_1640_pp0_iter44_reg;
        sel_tmp4_reg_1640_pp0_iter46_reg <= sel_tmp4_reg_1640_pp0_iter45_reg;
        sel_tmp4_reg_1640_pp0_iter47_reg <= sel_tmp4_reg_1640_pp0_iter46_reg;
        sel_tmp4_reg_1640_pp0_iter48_reg <= sel_tmp4_reg_1640_pp0_iter47_reg;
        sel_tmp4_reg_1640_pp0_iter49_reg <= sel_tmp4_reg_1640_pp0_iter48_reg;
        sel_tmp4_reg_1640_pp0_iter50_reg <= sel_tmp4_reg_1640_pp0_iter49_reg;
        sel_tmp4_reg_1640_pp0_iter51_reg <= sel_tmp4_reg_1640_pp0_iter50_reg;
        sel_tmp4_reg_1640_pp0_iter52_reg <= sel_tmp4_reg_1640_pp0_iter51_reg;
        sel_tmp4_reg_1640_pp0_iter53_reg <= sel_tmp4_reg_1640_pp0_iter52_reg;
        sel_tmp4_reg_1640_pp0_iter54_reg <= sel_tmp4_reg_1640_pp0_iter53_reg;
        sel_tmp4_reg_1640_pp0_iter55_reg <= sel_tmp4_reg_1640_pp0_iter54_reg;
        sel_tmp4_reg_1640_pp0_iter56_reg <= sel_tmp4_reg_1640_pp0_iter55_reg;
        sel_tmp4_reg_1640_pp0_iter57_reg <= sel_tmp4_reg_1640_pp0_iter56_reg;
        sel_tmp4_reg_1640_pp0_iter58_reg <= sel_tmp4_reg_1640_pp0_iter57_reg;
        sel_tmp4_reg_1640_pp0_iter59_reg <= sel_tmp4_reg_1640_pp0_iter58_reg;
        sel_tmp4_reg_1640_pp0_iter60_reg <= sel_tmp4_reg_1640_pp0_iter59_reg;
        sel_tmp6_reg_1647_pp0_iter41_reg <= sel_tmp6_reg_1647;
        sel_tmp6_reg_1647_pp0_iter42_reg <= sel_tmp6_reg_1647_pp0_iter41_reg;
        sel_tmp6_reg_1647_pp0_iter43_reg <= sel_tmp6_reg_1647_pp0_iter42_reg;
        sel_tmp6_reg_1647_pp0_iter44_reg <= sel_tmp6_reg_1647_pp0_iter43_reg;
        sel_tmp6_reg_1647_pp0_iter45_reg <= sel_tmp6_reg_1647_pp0_iter44_reg;
        sel_tmp6_reg_1647_pp0_iter46_reg <= sel_tmp6_reg_1647_pp0_iter45_reg;
        sel_tmp6_reg_1647_pp0_iter47_reg <= sel_tmp6_reg_1647_pp0_iter46_reg;
        sel_tmp6_reg_1647_pp0_iter48_reg <= sel_tmp6_reg_1647_pp0_iter47_reg;
        sel_tmp6_reg_1647_pp0_iter49_reg <= sel_tmp6_reg_1647_pp0_iter48_reg;
        sel_tmp6_reg_1647_pp0_iter50_reg <= sel_tmp6_reg_1647_pp0_iter49_reg;
        sel_tmp6_reg_1647_pp0_iter51_reg <= sel_tmp6_reg_1647_pp0_iter50_reg;
        sel_tmp6_reg_1647_pp0_iter52_reg <= sel_tmp6_reg_1647_pp0_iter51_reg;
        sel_tmp6_reg_1647_pp0_iter53_reg <= sel_tmp6_reg_1647_pp0_iter52_reg;
        sel_tmp6_reg_1647_pp0_iter54_reg <= sel_tmp6_reg_1647_pp0_iter53_reg;
        sel_tmp6_reg_1647_pp0_iter55_reg <= sel_tmp6_reg_1647_pp0_iter54_reg;
        sel_tmp6_reg_1647_pp0_iter56_reg <= sel_tmp6_reg_1647_pp0_iter55_reg;
        sel_tmp6_reg_1647_pp0_iter57_reg <= sel_tmp6_reg_1647_pp0_iter56_reg;
        sel_tmp6_reg_1647_pp0_iter58_reg <= sel_tmp6_reg_1647_pp0_iter57_reg;
        sel_tmp6_reg_1647_pp0_iter59_reg <= sel_tmp6_reg_1647_pp0_iter58_reg;
        sel_tmp6_reg_1647_pp0_iter60_reg <= sel_tmp6_reg_1647_pp0_iter59_reg;
        sel_tmp8_reg_1654_pp0_iter41_reg <= sel_tmp8_reg_1654;
        sel_tmp8_reg_1654_pp0_iter42_reg <= sel_tmp8_reg_1654_pp0_iter41_reg;
        sel_tmp8_reg_1654_pp0_iter43_reg <= sel_tmp8_reg_1654_pp0_iter42_reg;
        sel_tmp8_reg_1654_pp0_iter44_reg <= sel_tmp8_reg_1654_pp0_iter43_reg;
        sel_tmp8_reg_1654_pp0_iter45_reg <= sel_tmp8_reg_1654_pp0_iter44_reg;
        sel_tmp8_reg_1654_pp0_iter46_reg <= sel_tmp8_reg_1654_pp0_iter45_reg;
        sel_tmp8_reg_1654_pp0_iter47_reg <= sel_tmp8_reg_1654_pp0_iter46_reg;
        sel_tmp8_reg_1654_pp0_iter48_reg <= sel_tmp8_reg_1654_pp0_iter47_reg;
        sel_tmp8_reg_1654_pp0_iter49_reg <= sel_tmp8_reg_1654_pp0_iter48_reg;
        sel_tmp8_reg_1654_pp0_iter50_reg <= sel_tmp8_reg_1654_pp0_iter49_reg;
        sel_tmp8_reg_1654_pp0_iter51_reg <= sel_tmp8_reg_1654_pp0_iter50_reg;
        sel_tmp8_reg_1654_pp0_iter52_reg <= sel_tmp8_reg_1654_pp0_iter51_reg;
        sel_tmp8_reg_1654_pp0_iter53_reg <= sel_tmp8_reg_1654_pp0_iter52_reg;
        sel_tmp8_reg_1654_pp0_iter54_reg <= sel_tmp8_reg_1654_pp0_iter53_reg;
        sel_tmp8_reg_1654_pp0_iter55_reg <= sel_tmp8_reg_1654_pp0_iter54_reg;
        sel_tmp8_reg_1654_pp0_iter56_reg <= sel_tmp8_reg_1654_pp0_iter55_reg;
        sel_tmp8_reg_1654_pp0_iter57_reg <= sel_tmp8_reg_1654_pp0_iter56_reg;
        sel_tmp8_reg_1654_pp0_iter58_reg <= sel_tmp8_reg_1654_pp0_iter57_reg;
        sel_tmp8_reg_1654_pp0_iter59_reg <= sel_tmp8_reg_1654_pp0_iter58_reg;
        sel_tmp8_reg_1654_pp0_iter60_reg <= sel_tmp8_reg_1654_pp0_iter59_reg;
        sel_tmp_reg_1626_pp0_iter41_reg <= sel_tmp_reg_1626;
        sel_tmp_reg_1626_pp0_iter42_reg <= sel_tmp_reg_1626_pp0_iter41_reg;
        sel_tmp_reg_1626_pp0_iter43_reg <= sel_tmp_reg_1626_pp0_iter42_reg;
        sel_tmp_reg_1626_pp0_iter44_reg <= sel_tmp_reg_1626_pp0_iter43_reg;
        sel_tmp_reg_1626_pp0_iter45_reg <= sel_tmp_reg_1626_pp0_iter44_reg;
        sel_tmp_reg_1626_pp0_iter46_reg <= sel_tmp_reg_1626_pp0_iter45_reg;
        sel_tmp_reg_1626_pp0_iter47_reg <= sel_tmp_reg_1626_pp0_iter46_reg;
        sel_tmp_reg_1626_pp0_iter48_reg <= sel_tmp_reg_1626_pp0_iter47_reg;
        sel_tmp_reg_1626_pp0_iter49_reg <= sel_tmp_reg_1626_pp0_iter48_reg;
        sel_tmp_reg_1626_pp0_iter50_reg <= sel_tmp_reg_1626_pp0_iter49_reg;
        sel_tmp_reg_1626_pp0_iter51_reg <= sel_tmp_reg_1626_pp0_iter50_reg;
        sel_tmp_reg_1626_pp0_iter52_reg <= sel_tmp_reg_1626_pp0_iter51_reg;
        sel_tmp_reg_1626_pp0_iter53_reg <= sel_tmp_reg_1626_pp0_iter52_reg;
        sel_tmp_reg_1626_pp0_iter54_reg <= sel_tmp_reg_1626_pp0_iter53_reg;
        sel_tmp_reg_1626_pp0_iter55_reg <= sel_tmp_reg_1626_pp0_iter54_reg;
        sel_tmp_reg_1626_pp0_iter56_reg <= sel_tmp_reg_1626_pp0_iter55_reg;
        sel_tmp_reg_1626_pp0_iter57_reg <= sel_tmp_reg_1626_pp0_iter56_reg;
        sel_tmp_reg_1626_pp0_iter58_reg <= sel_tmp_reg_1626_pp0_iter57_reg;
        sel_tmp_reg_1626_pp0_iter59_reg <= sel_tmp_reg_1626_pp0_iter58_reg;
        sel_tmp_reg_1626_pp0_iter60_reg <= sel_tmp_reg_1626_pp0_iter59_reg;
        tmp_31_reg_1587_pp0_iter10_reg <= tmp_31_reg_1587_pp0_iter9_reg;
        tmp_31_reg_1587_pp0_iter11_reg <= tmp_31_reg_1587_pp0_iter10_reg;
        tmp_31_reg_1587_pp0_iter12_reg <= tmp_31_reg_1587_pp0_iter11_reg;
        tmp_31_reg_1587_pp0_iter13_reg <= tmp_31_reg_1587_pp0_iter12_reg;
        tmp_31_reg_1587_pp0_iter14_reg <= tmp_31_reg_1587_pp0_iter13_reg;
        tmp_31_reg_1587_pp0_iter15_reg <= tmp_31_reg_1587_pp0_iter14_reg;
        tmp_31_reg_1587_pp0_iter16_reg <= tmp_31_reg_1587_pp0_iter15_reg;
        tmp_31_reg_1587_pp0_iter17_reg <= tmp_31_reg_1587_pp0_iter16_reg;
        tmp_31_reg_1587_pp0_iter18_reg <= tmp_31_reg_1587_pp0_iter17_reg;
        tmp_31_reg_1587_pp0_iter19_reg <= tmp_31_reg_1587_pp0_iter18_reg;
        tmp_31_reg_1587_pp0_iter20_reg <= tmp_31_reg_1587_pp0_iter19_reg;
        tmp_31_reg_1587_pp0_iter21_reg <= tmp_31_reg_1587_pp0_iter20_reg;
        tmp_31_reg_1587_pp0_iter22_reg <= tmp_31_reg_1587_pp0_iter21_reg;
        tmp_31_reg_1587_pp0_iter23_reg <= tmp_31_reg_1587_pp0_iter22_reg;
        tmp_31_reg_1587_pp0_iter24_reg <= tmp_31_reg_1587_pp0_iter23_reg;
        tmp_31_reg_1587_pp0_iter25_reg <= tmp_31_reg_1587_pp0_iter24_reg;
        tmp_31_reg_1587_pp0_iter26_reg <= tmp_31_reg_1587_pp0_iter25_reg;
        tmp_31_reg_1587_pp0_iter27_reg <= tmp_31_reg_1587_pp0_iter26_reg;
        tmp_31_reg_1587_pp0_iter28_reg <= tmp_31_reg_1587_pp0_iter27_reg;
        tmp_31_reg_1587_pp0_iter29_reg <= tmp_31_reg_1587_pp0_iter28_reg;
        tmp_31_reg_1587_pp0_iter30_reg <= tmp_31_reg_1587_pp0_iter29_reg;
        tmp_31_reg_1587_pp0_iter31_reg <= tmp_31_reg_1587_pp0_iter30_reg;
        tmp_31_reg_1587_pp0_iter32_reg <= tmp_31_reg_1587_pp0_iter31_reg;
        tmp_31_reg_1587_pp0_iter33_reg <= tmp_31_reg_1587_pp0_iter32_reg;
        tmp_31_reg_1587_pp0_iter34_reg <= tmp_31_reg_1587_pp0_iter33_reg;
        tmp_31_reg_1587_pp0_iter35_reg <= tmp_31_reg_1587_pp0_iter34_reg;
        tmp_31_reg_1587_pp0_iter36_reg <= tmp_31_reg_1587_pp0_iter35_reg;
        tmp_31_reg_1587_pp0_iter37_reg <= tmp_31_reg_1587_pp0_iter36_reg;
        tmp_31_reg_1587_pp0_iter38_reg <= tmp_31_reg_1587_pp0_iter37_reg;
        tmp_31_reg_1587_pp0_iter39_reg <= tmp_31_reg_1587_pp0_iter38_reg;
        tmp_31_reg_1587_pp0_iter3_reg <= tmp_31_reg_1587;
        tmp_31_reg_1587_pp0_iter40_reg <= tmp_31_reg_1587_pp0_iter39_reg;
        tmp_31_reg_1587_pp0_iter41_reg <= tmp_31_reg_1587_pp0_iter40_reg;
        tmp_31_reg_1587_pp0_iter42_reg <= tmp_31_reg_1587_pp0_iter41_reg;
        tmp_31_reg_1587_pp0_iter43_reg <= tmp_31_reg_1587_pp0_iter42_reg;
        tmp_31_reg_1587_pp0_iter44_reg <= tmp_31_reg_1587_pp0_iter43_reg;
        tmp_31_reg_1587_pp0_iter45_reg <= tmp_31_reg_1587_pp0_iter44_reg;
        tmp_31_reg_1587_pp0_iter46_reg <= tmp_31_reg_1587_pp0_iter45_reg;
        tmp_31_reg_1587_pp0_iter47_reg <= tmp_31_reg_1587_pp0_iter46_reg;
        tmp_31_reg_1587_pp0_iter48_reg <= tmp_31_reg_1587_pp0_iter47_reg;
        tmp_31_reg_1587_pp0_iter49_reg <= tmp_31_reg_1587_pp0_iter48_reg;
        tmp_31_reg_1587_pp0_iter4_reg <= tmp_31_reg_1587_pp0_iter3_reg;
        tmp_31_reg_1587_pp0_iter50_reg <= tmp_31_reg_1587_pp0_iter49_reg;
        tmp_31_reg_1587_pp0_iter51_reg <= tmp_31_reg_1587_pp0_iter50_reg;
        tmp_31_reg_1587_pp0_iter52_reg <= tmp_31_reg_1587_pp0_iter51_reg;
        tmp_31_reg_1587_pp0_iter53_reg <= tmp_31_reg_1587_pp0_iter52_reg;
        tmp_31_reg_1587_pp0_iter54_reg <= tmp_31_reg_1587_pp0_iter53_reg;
        tmp_31_reg_1587_pp0_iter55_reg <= tmp_31_reg_1587_pp0_iter54_reg;
        tmp_31_reg_1587_pp0_iter56_reg <= tmp_31_reg_1587_pp0_iter55_reg;
        tmp_31_reg_1587_pp0_iter57_reg <= tmp_31_reg_1587_pp0_iter56_reg;
        tmp_31_reg_1587_pp0_iter58_reg <= tmp_31_reg_1587_pp0_iter57_reg;
        tmp_31_reg_1587_pp0_iter59_reg <= tmp_31_reg_1587_pp0_iter58_reg;
        tmp_31_reg_1587_pp0_iter5_reg <= tmp_31_reg_1587_pp0_iter4_reg;
        tmp_31_reg_1587_pp0_iter60_reg <= tmp_31_reg_1587_pp0_iter59_reg;
        tmp_31_reg_1587_pp0_iter61_reg <= tmp_31_reg_1587_pp0_iter60_reg;
        tmp_31_reg_1587_pp0_iter62_reg <= tmp_31_reg_1587_pp0_iter61_reg;
        tmp_31_reg_1587_pp0_iter63_reg <= tmp_31_reg_1587_pp0_iter62_reg;
        tmp_31_reg_1587_pp0_iter64_reg <= tmp_31_reg_1587_pp0_iter63_reg;
        tmp_31_reg_1587_pp0_iter65_reg <= tmp_31_reg_1587_pp0_iter64_reg;
        tmp_31_reg_1587_pp0_iter66_reg <= tmp_31_reg_1587_pp0_iter65_reg;
        tmp_31_reg_1587_pp0_iter67_reg <= tmp_31_reg_1587_pp0_iter66_reg;
        tmp_31_reg_1587_pp0_iter6_reg <= tmp_31_reg_1587_pp0_iter5_reg;
        tmp_31_reg_1587_pp0_iter7_reg <= tmp_31_reg_1587_pp0_iter6_reg;
        tmp_31_reg_1587_pp0_iter8_reg <= tmp_31_reg_1587_pp0_iter7_reg;
        tmp_31_reg_1587_pp0_iter9_reg <= tmp_31_reg_1587_pp0_iter8_reg;
        tmp_last_V_reg_1543_pp0_iter10_reg <= tmp_last_V_reg_1543_pp0_iter9_reg;
        tmp_last_V_reg_1543_pp0_iter11_reg <= tmp_last_V_reg_1543_pp0_iter10_reg;
        tmp_last_V_reg_1543_pp0_iter12_reg <= tmp_last_V_reg_1543_pp0_iter11_reg;
        tmp_last_V_reg_1543_pp0_iter13_reg <= tmp_last_V_reg_1543_pp0_iter12_reg;
        tmp_last_V_reg_1543_pp0_iter14_reg <= tmp_last_V_reg_1543_pp0_iter13_reg;
        tmp_last_V_reg_1543_pp0_iter15_reg <= tmp_last_V_reg_1543_pp0_iter14_reg;
        tmp_last_V_reg_1543_pp0_iter16_reg <= tmp_last_V_reg_1543_pp0_iter15_reg;
        tmp_last_V_reg_1543_pp0_iter17_reg <= tmp_last_V_reg_1543_pp0_iter16_reg;
        tmp_last_V_reg_1543_pp0_iter18_reg <= tmp_last_V_reg_1543_pp0_iter17_reg;
        tmp_last_V_reg_1543_pp0_iter19_reg <= tmp_last_V_reg_1543_pp0_iter18_reg;
        tmp_last_V_reg_1543_pp0_iter20_reg <= tmp_last_V_reg_1543_pp0_iter19_reg;
        tmp_last_V_reg_1543_pp0_iter21_reg <= tmp_last_V_reg_1543_pp0_iter20_reg;
        tmp_last_V_reg_1543_pp0_iter22_reg <= tmp_last_V_reg_1543_pp0_iter21_reg;
        tmp_last_V_reg_1543_pp0_iter23_reg <= tmp_last_V_reg_1543_pp0_iter22_reg;
        tmp_last_V_reg_1543_pp0_iter24_reg <= tmp_last_V_reg_1543_pp0_iter23_reg;
        tmp_last_V_reg_1543_pp0_iter25_reg <= tmp_last_V_reg_1543_pp0_iter24_reg;
        tmp_last_V_reg_1543_pp0_iter26_reg <= tmp_last_V_reg_1543_pp0_iter25_reg;
        tmp_last_V_reg_1543_pp0_iter27_reg <= tmp_last_V_reg_1543_pp0_iter26_reg;
        tmp_last_V_reg_1543_pp0_iter28_reg <= tmp_last_V_reg_1543_pp0_iter27_reg;
        tmp_last_V_reg_1543_pp0_iter29_reg <= tmp_last_V_reg_1543_pp0_iter28_reg;
        tmp_last_V_reg_1543_pp0_iter2_reg <= tmp_last_V_reg_1543_pp0_iter1_reg;
        tmp_last_V_reg_1543_pp0_iter30_reg <= tmp_last_V_reg_1543_pp0_iter29_reg;
        tmp_last_V_reg_1543_pp0_iter31_reg <= tmp_last_V_reg_1543_pp0_iter30_reg;
        tmp_last_V_reg_1543_pp0_iter32_reg <= tmp_last_V_reg_1543_pp0_iter31_reg;
        tmp_last_V_reg_1543_pp0_iter33_reg <= tmp_last_V_reg_1543_pp0_iter32_reg;
        tmp_last_V_reg_1543_pp0_iter34_reg <= tmp_last_V_reg_1543_pp0_iter33_reg;
        tmp_last_V_reg_1543_pp0_iter35_reg <= tmp_last_V_reg_1543_pp0_iter34_reg;
        tmp_last_V_reg_1543_pp0_iter36_reg <= tmp_last_V_reg_1543_pp0_iter35_reg;
        tmp_last_V_reg_1543_pp0_iter37_reg <= tmp_last_V_reg_1543_pp0_iter36_reg;
        tmp_last_V_reg_1543_pp0_iter38_reg <= tmp_last_V_reg_1543_pp0_iter37_reg;
        tmp_last_V_reg_1543_pp0_iter39_reg <= tmp_last_V_reg_1543_pp0_iter38_reg;
        tmp_last_V_reg_1543_pp0_iter3_reg <= tmp_last_V_reg_1543_pp0_iter2_reg;
        tmp_last_V_reg_1543_pp0_iter40_reg <= tmp_last_V_reg_1543_pp0_iter39_reg;
        tmp_last_V_reg_1543_pp0_iter41_reg <= tmp_last_V_reg_1543_pp0_iter40_reg;
        tmp_last_V_reg_1543_pp0_iter42_reg <= tmp_last_V_reg_1543_pp0_iter41_reg;
        tmp_last_V_reg_1543_pp0_iter43_reg <= tmp_last_V_reg_1543_pp0_iter42_reg;
        tmp_last_V_reg_1543_pp0_iter44_reg <= tmp_last_V_reg_1543_pp0_iter43_reg;
        tmp_last_V_reg_1543_pp0_iter45_reg <= tmp_last_V_reg_1543_pp0_iter44_reg;
        tmp_last_V_reg_1543_pp0_iter46_reg <= tmp_last_V_reg_1543_pp0_iter45_reg;
        tmp_last_V_reg_1543_pp0_iter47_reg <= tmp_last_V_reg_1543_pp0_iter46_reg;
        tmp_last_V_reg_1543_pp0_iter48_reg <= tmp_last_V_reg_1543_pp0_iter47_reg;
        tmp_last_V_reg_1543_pp0_iter49_reg <= tmp_last_V_reg_1543_pp0_iter48_reg;
        tmp_last_V_reg_1543_pp0_iter4_reg <= tmp_last_V_reg_1543_pp0_iter3_reg;
        tmp_last_V_reg_1543_pp0_iter50_reg <= tmp_last_V_reg_1543_pp0_iter49_reg;
        tmp_last_V_reg_1543_pp0_iter51_reg <= tmp_last_V_reg_1543_pp0_iter50_reg;
        tmp_last_V_reg_1543_pp0_iter52_reg <= tmp_last_V_reg_1543_pp0_iter51_reg;
        tmp_last_V_reg_1543_pp0_iter53_reg <= tmp_last_V_reg_1543_pp0_iter52_reg;
        tmp_last_V_reg_1543_pp0_iter54_reg <= tmp_last_V_reg_1543_pp0_iter53_reg;
        tmp_last_V_reg_1543_pp0_iter55_reg <= tmp_last_V_reg_1543_pp0_iter54_reg;
        tmp_last_V_reg_1543_pp0_iter56_reg <= tmp_last_V_reg_1543_pp0_iter55_reg;
        tmp_last_V_reg_1543_pp0_iter57_reg <= tmp_last_V_reg_1543_pp0_iter56_reg;
        tmp_last_V_reg_1543_pp0_iter58_reg <= tmp_last_V_reg_1543_pp0_iter57_reg;
        tmp_last_V_reg_1543_pp0_iter59_reg <= tmp_last_V_reg_1543_pp0_iter58_reg;
        tmp_last_V_reg_1543_pp0_iter5_reg <= tmp_last_V_reg_1543_pp0_iter4_reg;
        tmp_last_V_reg_1543_pp0_iter60_reg <= tmp_last_V_reg_1543_pp0_iter59_reg;
        tmp_last_V_reg_1543_pp0_iter61_reg <= tmp_last_V_reg_1543_pp0_iter60_reg;
        tmp_last_V_reg_1543_pp0_iter62_reg <= tmp_last_V_reg_1543_pp0_iter61_reg;
        tmp_last_V_reg_1543_pp0_iter63_reg <= tmp_last_V_reg_1543_pp0_iter62_reg;
        tmp_last_V_reg_1543_pp0_iter64_reg <= tmp_last_V_reg_1543_pp0_iter63_reg;
        tmp_last_V_reg_1543_pp0_iter65_reg <= tmp_last_V_reg_1543_pp0_iter64_reg;
        tmp_last_V_reg_1543_pp0_iter66_reg <= tmp_last_V_reg_1543_pp0_iter65_reg;
        tmp_last_V_reg_1543_pp0_iter67_reg <= tmp_last_V_reg_1543_pp0_iter66_reg;
        tmp_last_V_reg_1543_pp0_iter68_reg <= tmp_last_V_reg_1543_pp0_iter67_reg;
        tmp_last_V_reg_1543_pp0_iter6_reg <= tmp_last_V_reg_1543_pp0_iter5_reg;
        tmp_last_V_reg_1543_pp0_iter7_reg <= tmp_last_V_reg_1543_pp0_iter6_reg;
        tmp_last_V_reg_1543_pp0_iter8_reg <= tmp_last_V_reg_1543_pp0_iter7_reg;
        tmp_last_V_reg_1543_pp0_iter9_reg <= tmp_last_V_reg_1543_pp0_iter8_reg;
        tmp_user_V_reg_1538_pp0_iter10_reg <= tmp_user_V_reg_1538_pp0_iter9_reg;
        tmp_user_V_reg_1538_pp0_iter11_reg <= tmp_user_V_reg_1538_pp0_iter10_reg;
        tmp_user_V_reg_1538_pp0_iter12_reg <= tmp_user_V_reg_1538_pp0_iter11_reg;
        tmp_user_V_reg_1538_pp0_iter13_reg <= tmp_user_V_reg_1538_pp0_iter12_reg;
        tmp_user_V_reg_1538_pp0_iter14_reg <= tmp_user_V_reg_1538_pp0_iter13_reg;
        tmp_user_V_reg_1538_pp0_iter15_reg <= tmp_user_V_reg_1538_pp0_iter14_reg;
        tmp_user_V_reg_1538_pp0_iter16_reg <= tmp_user_V_reg_1538_pp0_iter15_reg;
        tmp_user_V_reg_1538_pp0_iter17_reg <= tmp_user_V_reg_1538_pp0_iter16_reg;
        tmp_user_V_reg_1538_pp0_iter18_reg <= tmp_user_V_reg_1538_pp0_iter17_reg;
        tmp_user_V_reg_1538_pp0_iter19_reg <= tmp_user_V_reg_1538_pp0_iter18_reg;
        tmp_user_V_reg_1538_pp0_iter20_reg <= tmp_user_V_reg_1538_pp0_iter19_reg;
        tmp_user_V_reg_1538_pp0_iter21_reg <= tmp_user_V_reg_1538_pp0_iter20_reg;
        tmp_user_V_reg_1538_pp0_iter22_reg <= tmp_user_V_reg_1538_pp0_iter21_reg;
        tmp_user_V_reg_1538_pp0_iter23_reg <= tmp_user_V_reg_1538_pp0_iter22_reg;
        tmp_user_V_reg_1538_pp0_iter24_reg <= tmp_user_V_reg_1538_pp0_iter23_reg;
        tmp_user_V_reg_1538_pp0_iter25_reg <= tmp_user_V_reg_1538_pp0_iter24_reg;
        tmp_user_V_reg_1538_pp0_iter26_reg <= tmp_user_V_reg_1538_pp0_iter25_reg;
        tmp_user_V_reg_1538_pp0_iter27_reg <= tmp_user_V_reg_1538_pp0_iter26_reg;
        tmp_user_V_reg_1538_pp0_iter28_reg <= tmp_user_V_reg_1538_pp0_iter27_reg;
        tmp_user_V_reg_1538_pp0_iter29_reg <= tmp_user_V_reg_1538_pp0_iter28_reg;
        tmp_user_V_reg_1538_pp0_iter2_reg <= tmp_user_V_reg_1538_pp0_iter1_reg;
        tmp_user_V_reg_1538_pp0_iter30_reg <= tmp_user_V_reg_1538_pp0_iter29_reg;
        tmp_user_V_reg_1538_pp0_iter31_reg <= tmp_user_V_reg_1538_pp0_iter30_reg;
        tmp_user_V_reg_1538_pp0_iter32_reg <= tmp_user_V_reg_1538_pp0_iter31_reg;
        tmp_user_V_reg_1538_pp0_iter33_reg <= tmp_user_V_reg_1538_pp0_iter32_reg;
        tmp_user_V_reg_1538_pp0_iter34_reg <= tmp_user_V_reg_1538_pp0_iter33_reg;
        tmp_user_V_reg_1538_pp0_iter35_reg <= tmp_user_V_reg_1538_pp0_iter34_reg;
        tmp_user_V_reg_1538_pp0_iter36_reg <= tmp_user_V_reg_1538_pp0_iter35_reg;
        tmp_user_V_reg_1538_pp0_iter37_reg <= tmp_user_V_reg_1538_pp0_iter36_reg;
        tmp_user_V_reg_1538_pp0_iter38_reg <= tmp_user_V_reg_1538_pp0_iter37_reg;
        tmp_user_V_reg_1538_pp0_iter39_reg <= tmp_user_V_reg_1538_pp0_iter38_reg;
        tmp_user_V_reg_1538_pp0_iter3_reg <= tmp_user_V_reg_1538_pp0_iter2_reg;
        tmp_user_V_reg_1538_pp0_iter40_reg <= tmp_user_V_reg_1538_pp0_iter39_reg;
        tmp_user_V_reg_1538_pp0_iter41_reg <= tmp_user_V_reg_1538_pp0_iter40_reg;
        tmp_user_V_reg_1538_pp0_iter42_reg <= tmp_user_V_reg_1538_pp0_iter41_reg;
        tmp_user_V_reg_1538_pp0_iter43_reg <= tmp_user_V_reg_1538_pp0_iter42_reg;
        tmp_user_V_reg_1538_pp0_iter44_reg <= tmp_user_V_reg_1538_pp0_iter43_reg;
        tmp_user_V_reg_1538_pp0_iter45_reg <= tmp_user_V_reg_1538_pp0_iter44_reg;
        tmp_user_V_reg_1538_pp0_iter46_reg <= tmp_user_V_reg_1538_pp0_iter45_reg;
        tmp_user_V_reg_1538_pp0_iter47_reg <= tmp_user_V_reg_1538_pp0_iter46_reg;
        tmp_user_V_reg_1538_pp0_iter48_reg <= tmp_user_V_reg_1538_pp0_iter47_reg;
        tmp_user_V_reg_1538_pp0_iter49_reg <= tmp_user_V_reg_1538_pp0_iter48_reg;
        tmp_user_V_reg_1538_pp0_iter4_reg <= tmp_user_V_reg_1538_pp0_iter3_reg;
        tmp_user_V_reg_1538_pp0_iter50_reg <= tmp_user_V_reg_1538_pp0_iter49_reg;
        tmp_user_V_reg_1538_pp0_iter51_reg <= tmp_user_V_reg_1538_pp0_iter50_reg;
        tmp_user_V_reg_1538_pp0_iter52_reg <= tmp_user_V_reg_1538_pp0_iter51_reg;
        tmp_user_V_reg_1538_pp0_iter53_reg <= tmp_user_V_reg_1538_pp0_iter52_reg;
        tmp_user_V_reg_1538_pp0_iter54_reg <= tmp_user_V_reg_1538_pp0_iter53_reg;
        tmp_user_V_reg_1538_pp0_iter55_reg <= tmp_user_V_reg_1538_pp0_iter54_reg;
        tmp_user_V_reg_1538_pp0_iter56_reg <= tmp_user_V_reg_1538_pp0_iter55_reg;
        tmp_user_V_reg_1538_pp0_iter57_reg <= tmp_user_V_reg_1538_pp0_iter56_reg;
        tmp_user_V_reg_1538_pp0_iter58_reg <= tmp_user_V_reg_1538_pp0_iter57_reg;
        tmp_user_V_reg_1538_pp0_iter59_reg <= tmp_user_V_reg_1538_pp0_iter58_reg;
        tmp_user_V_reg_1538_pp0_iter5_reg <= tmp_user_V_reg_1538_pp0_iter4_reg;
        tmp_user_V_reg_1538_pp0_iter60_reg <= tmp_user_V_reg_1538_pp0_iter59_reg;
        tmp_user_V_reg_1538_pp0_iter61_reg <= tmp_user_V_reg_1538_pp0_iter60_reg;
        tmp_user_V_reg_1538_pp0_iter62_reg <= tmp_user_V_reg_1538_pp0_iter61_reg;
        tmp_user_V_reg_1538_pp0_iter63_reg <= tmp_user_V_reg_1538_pp0_iter62_reg;
        tmp_user_V_reg_1538_pp0_iter64_reg <= tmp_user_V_reg_1538_pp0_iter63_reg;
        tmp_user_V_reg_1538_pp0_iter65_reg <= tmp_user_V_reg_1538_pp0_iter64_reg;
        tmp_user_V_reg_1538_pp0_iter66_reg <= tmp_user_V_reg_1538_pp0_iter65_reg;
        tmp_user_V_reg_1538_pp0_iter67_reg <= tmp_user_V_reg_1538_pp0_iter66_reg;
        tmp_user_V_reg_1538_pp0_iter68_reg <= tmp_user_V_reg_1538_pp0_iter67_reg;
        tmp_user_V_reg_1538_pp0_iter6_reg <= tmp_user_V_reg_1538_pp0_iter5_reg;
        tmp_user_V_reg_1538_pp0_iter7_reg <= tmp_user_V_reg_1538_pp0_iter6_reg;
        tmp_user_V_reg_1538_pp0_iter8_reg <= tmp_user_V_reg_1538_pp0_iter7_reg;
        tmp_user_V_reg_1538_pp0_iter9_reg <= tmp_user_V_reg_1538_pp0_iter8_reg;
        x_assign_mid2_reg_1597_pp0_iter38_reg <= x_assign_mid2_reg_1597;
        x_assign_mid2_reg_1597_pp0_iter39_reg <= x_assign_mid2_reg_1597_pp0_iter38_reg;
        x_assign_mid2_reg_1597_pp0_iter40_reg <= x_assign_mid2_reg_1597_pp0_iter39_reg;
        x_assign_mid2_reg_1597_pp0_iter41_reg <= x_assign_mid2_reg_1597_pp0_iter40_reg;
        x_assign_mid2_reg_1597_pp0_iter42_reg <= x_assign_mid2_reg_1597_pp0_iter41_reg;
        x_assign_mid2_reg_1597_pp0_iter43_reg <= x_assign_mid2_reg_1597_pp0_iter42_reg;
        x_assign_mid2_reg_1597_pp0_iter44_reg <= x_assign_mid2_reg_1597_pp0_iter43_reg;
        x_assign_mid2_reg_1597_pp0_iter45_reg <= x_assign_mid2_reg_1597_pp0_iter44_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1508 <= exitcond_flatten_fu_417_p2;
        or_cond_reg_1548 <= or_cond_fu_549_p2;
        row_V_reg_1528 <= row_V_fu_491_p2;
        tmp_1_mid_reg_1518 <= tmp_1_mid_fu_477_p2;
        tmp_last_V_reg_1543 <= tmp_last_V_fu_531_p2;
        tmp_user_V_reg_1538 <= tmp_user_V_fu_525_p2;
        x_assign_mid2_v_v_v_reg_1513[8 : 1] <= x_assign_mid2_v_v_v_fu_457_p3[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter49_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter49_reg == 1'd0))) begin
        f_reg_1673 <= grp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_data_V_1_load_A == 1'b1)) begin
        m_axis_video_V_data_V_1_payload_A <= tmp_data_V_fu_1451_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_data_V_1_load_B == 1'b1)) begin
        m_axis_video_V_data_V_1_payload_B <= tmp_data_V_fu_1451_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_last_V_1_load_A == 1'b1)) begin
        m_axis_video_V_last_V_1_payload_A <= tmp_last_V_reg_1543_pp0_iter68_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_last_V_1_load_B == 1'b1)) begin
        m_axis_video_V_last_V_1_payload_B <= tmp_last_V_reg_1543_pp0_iter68_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_user_V_1_load_A == 1'b1)) begin
        m_axis_video_V_user_V_1_payload_A <= tmp_user_V_reg_1538_pp0_iter68_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_video_V_user_V_1_load_B == 1'b1)) begin
        m_axis_video_V_user_V_1_payload_B <= tmp_user_V_reg_1538_pp0_iter68_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_mid_reg_1518 == 1'd1) & (exitcond_flatten1_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul2_reg_1577 <= mul2_fu_1468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_mid_reg_1518 == 1'd0) & (exitcond_flatten_reg_1508 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_reg_1567 <= mul_fu_1462_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter67_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter67_reg == 1'd0))) begin
        p_Result_1_reg_1739 <= p_Val2_8_fu_1125_p1[32'd63];
        p_Result_2_reg_1750 <= p_Val2_13_fu_1254_p1[32'd63];
        p_Result_s_reg_1728 <= p_Val2_s_fu_996_p1[32'd63];
        p_Val2_20_reg_1744 <= p_Val2_20_fu_1246_p3;
        p_Val2_22_reg_1755 <= p_Val2_22_fu_1375_p3;
        tmp_24_reg_1733 <= tmp_24_fu_1117_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter37_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter37_reg == 1'd0))) begin
        p_Val2_18_reg_1608 <= p_Val2_18_fu_798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter38_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter38_reg == 1'd0))) begin
        p_Val2_19_reg_1614 <= p_Val2_19_fu_811_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter54_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter54_reg == 1'd0))) begin
        q_reg_1678 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_fu_549_p2 == 1'd0) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ret_V_2_reg_1552[13 : 4] <= ret_V_2_fu_563_p2[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter39_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter39_reg == 1'd0))) begin
        sel_tmp11_reg_1661 <= sel_tmp11_fu_852_p2;
        sel_tmp2_reg_1633 <= sel_tmp2_fu_822_p2;
        sel_tmp4_reg_1640 <= sel_tmp4_fu_827_p2;
        sel_tmp6_reg_1647 <= sel_tmp6_fu_832_p2;
        sel_tmp8_reg_1654 <= sel_tmp8_fu_837_p2;
        sel_tmp_reg_1626 <= sel_tmp_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_fu_399_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_1_mid2_reg_1533 <= t_V_1_mid2_fu_511_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter59_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter59_reg == 1'd0))) begin
        t_reg_1686 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter37_reg == 1'd0))) begin
        tmp_1_reg_1603 <= val_assign_mid2_fu_677_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter1_reg == 1'd0) & (exitcond_flatten1_reg_1499_pp0_iter1_reg == 1'd0))) begin
        tmp_31_reg_1587 <= tmp_31_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548 == 1'd0) & (exitcond_flatten1_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_34_reg_1582 <= {{mul4_fu_1474_p2[29:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter44_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter44_reg == 1'd0))) begin
        tmp_s_reg_1668 <= grp_fu_370_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_1548_pp0_iter66_reg == 1'd1) & (exitcond_flatten1_reg_1499_pp0_iter66_reg == 1'd0))) begin
        x_assign_1_reg_1708 <= grp_fu_347_p2;
        x_assign_2_reg_1713 <= grp_fu_352_p2;
        x_assign_3_reg_1718 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter36_reg == 1'd0))) begin
        x_assign_mid2_reg_1597 <= grp_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter5_reg == 1'd0))) begin
        x_assign_mid2_v_reg_1592 <= grp_fu_367_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axis_video_V_keep_V_1_ack_in == 1'b0) | (m_axis_video_V_dest_V_1_ack_in == 1'b0) | (m_axis_video_V_data_V_1_ack_in == 1'b0) | (m_axis_video_V_id_V_1_ack_in == 1'b0) | (m_axis_video_V_last_V_1_ack_in == 1'b0) | (m_axis_video_V_user_V_1_ack_in == 1'b0) | (m_axis_video_V_strb_V_1_ack_in == 1'b0)) & (m_axis_video_V_data_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_dest_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_id_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_last_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_user_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_strb_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_keep_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state73))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_449)) begin
        if (((tmp_35_fu_1383_p3 == 1'd1) & (or_cond_reg_1548_pp0_iter68_reg == 1'd0))) begin
            ap_phi_mux_B_2_phi_fu_324_p6 = 32'd255;
        end else if (((or_cond_reg_1548_pp0_iter68_reg == 1'd0) & (tmp_35_fu_1383_p3 == 1'd0))) begin
            ap_phi_mux_B_2_phi_fu_324_p6 = G_cast_cast_fu_1397_p3;
        end else if ((or_cond_reg_1548_pp0_iter68_reg == 1'd1)) begin
            ap_phi_mux_B_2_phi_fu_324_p6 = p_Val2_23_fu_1436_p3;
        end else begin
            ap_phi_mux_B_2_phi_fu_324_p6 = ap_phi_reg_pp0_iter69_B_2_reg_321;
        end
    end else begin
        ap_phi_mux_B_2_phi_fu_324_p6 = ap_phi_reg_pp0_iter69_B_2_reg_321;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_449)) begin
        if (((tmp_35_fu_1383_p3 == 1'd1) & (or_cond_reg_1548_pp0_iter68_reg == 1'd0))) begin
            ap_phi_mux_G_2_phi_fu_312_p6 = 32'd0;
        end else if (((or_cond_reg_1548_pp0_iter68_reg == 1'd0) & (tmp_35_fu_1383_p3 == 1'd0))) begin
            ap_phi_mux_G_2_phi_fu_312_p6 = G_cast_cast_fu_1397_p3;
        end else if ((or_cond_reg_1548_pp0_iter68_reg == 1'd1)) begin
            ap_phi_mux_G_2_phi_fu_312_p6 = p_Val2_21_fu_1424_p3;
        end else begin
            ap_phi_mux_G_2_phi_fu_312_p6 = ap_phi_reg_pp0_iter69_G_2_reg_309;
        end
    end else begin
        ap_phi_mux_G_2_phi_fu_312_p6 = ap_phi_reg_pp0_iter69_G_2_reg_309;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_449)) begin
        if (((tmp_35_fu_1383_p3 == 1'd1) & (or_cond_reg_1548_pp0_iter68_reg == 1'd0))) begin
            ap_phi_mux_pixel_R_phi_fu_299_p6 = 8'd255;
        end else if (((or_cond_reg_1548_pp0_iter68_reg == 1'd0) & (tmp_35_fu_1383_p3 == 1'd0))) begin
            ap_phi_mux_pixel_R_phi_fu_299_p6 = 8'd0;
        end else if ((or_cond_reg_1548_pp0_iter68_reg == 1'd1)) begin
            ap_phi_mux_pixel_R_phi_fu_299_p6 = tmp_23_fu_1412_p3;
        end else begin
            ap_phi_mux_pixel_R_phi_fu_299_p6 = ap_phi_reg_pp0_iter69_pixel_R_reg_296;
        end
    end else begin
        ap_phi_mux_pixel_R_phi_fu_299_p6 = ap_phi_reg_pp0_iter69_pixel_R_reg_296;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1499 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_t_V_1_phi_fu_277_p4 = t_V_1_mid2_reg_1533;
    end else begin
        ap_phi_mux_t_V_1_phi_fu_277_p4 = t_V_1_reg_273;
    end
end

always @ (*) begin
    if ((~((m_axis_video_V_keep_V_1_ack_in == 1'b0) | (m_axis_video_V_dest_V_1_ack_in == 1'b0) | (m_axis_video_V_data_V_1_ack_in == 1'b0) | (m_axis_video_V_id_V_1_ack_in == 1'b0) | (m_axis_video_V_last_V_1_ack_in == 1'b0) | (m_axis_video_V_user_V_1_ack_in == 1'b0) | (m_axis_video_V_strb_V_1_ack_in == 1'b0)) & (m_axis_video_V_data_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_dest_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_id_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_last_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_user_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_strb_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_keep_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state73))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        field_V_ce0 = 1'b1;
    end else begin
        field_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_342_ce = 1'b1;
    end else begin
        grp_fu_342_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_357_ce = 1'b1;
    end else begin
        grp_fu_357_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_362_ce = 1'b1;
    end else begin
        grp_fu_362_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_367_ce = 1'b1;
    end else begin
        grp_fu_367_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_370_ce = 1'b1;
    end else begin
        grp_fu_370_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten1_reg_1499_pp0_iter69_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter70 == 1'b1)) | ((exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter69 == 1'b1)))) begin
        m_axis_video_TDATA_blk_n = m_axis_video_V_data_V_1_state[1'd1];
    end else begin
        m_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((m_axis_video_V_data_V_1_sel == 1'b1)) begin
        m_axis_video_V_data_V_1_data_out = m_axis_video_V_data_V_1_payload_B;
    end else begin
        m_axis_video_V_data_V_1_data_out = m_axis_video_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_data_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_dest_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_id_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_keep_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((m_axis_video_V_last_V_1_sel == 1'b1)) begin
        m_axis_video_V_last_V_1_data_out = m_axis_video_V_last_V_1_payload_B;
    end else begin
        m_axis_video_V_last_V_1_data_out = m_axis_video_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_last_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_strb_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((m_axis_video_V_user_V_1_sel == 1'b1)) begin
        m_axis_video_V_user_V_1_data_out = m_axis_video_V_user_V_1_payload_B;
    end else begin
        m_axis_video_V_user_V_1_data_out = m_axis_video_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (ap_enable_reg_pp0_iter69 == 1'b1))) begin
        m_axis_video_V_user_V_1_vld_in = 1'b1;
    end else begin
        m_axis_video_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            if ((~((m_axis_video_V_keep_V_1_ack_in == 1'b0) | (m_axis_video_V_dest_V_1_ack_in == 1'b0) | (m_axis_video_V_data_V_1_ack_in == 1'b0) | (m_axis_video_V_id_V_1_ack_in == 1'b0) | (m_axis_video_V_last_V_1_ack_in == 1'b0) | (m_axis_video_V_user_V_1_ack_in == 1'b0) | (m_axis_video_V_strb_V_1_ack_in == 1'b0)) & (m_axis_video_V_data_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_dest_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_id_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_last_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_user_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_strb_V_1_state[1'd0] == 1'b0) & (m_axis_video_V_keep_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G_cast_cast_fu_1397_p3 = ((tmp_14_fu_1391_p2[0:0] === 1'b1) ? 32'd255 : 32'd0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state72_io) & (ap_enable_reg_pp0_iter70 == 1'b1)) | ((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp0_iter69 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state72_io) & (ap_enable_reg_pp0_iter70 == 1'b1)) | ((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp0_iter69 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_io = ((exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (m_axis_video_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state71_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_io = ((exitcond_flatten1_reg_1499_pp0_iter69_reg == 1'd0) & (m_axis_video_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state72_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73 = ((m_axis_video_V_keep_V_1_ack_in == 1'b0) | (m_axis_video_V_dest_V_1_ack_in == 1'b0) | (m_axis_video_V_data_V_1_ack_in == 1'b0) | (m_axis_video_V_id_V_1_ack_in == 1'b0) | (m_axis_video_V_last_V_1_ack_in == 1'b0) | (m_axis_video_V_user_V_1_ack_in == 1'b0) | (m_axis_video_V_strb_V_1_ack_in == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_449 = ((exitcond_flatten1_reg_1499_pp0_iter68_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter69 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter69_B_2_reg_321 = 'bx;

assign ap_phi_reg_pp0_iter69_G_2_reg_309 = 'bx;

assign ap_phi_reg_pp0_iter69_pixel_R_reg_296 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_3_fu_969_p3 = ((tmp_20_fu_965_p2[0:0] === 1'b1) ? 64'd0 : sel_tmp17_fu_959_p3);

assign col_V_fu_569_p2 = (10'd1 + t_V_2_mid2_fu_503_p3);

assign exitcond_flatten1_fu_399_p2 = ((indvar_flatten1_reg_240 == 25'd17280000) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_417_p2 = ((indvar_flatten_reg_262 == 20'd480000) ? 1'b1 : 1'b0);

assign field_V_address0 = tmp_41_cast_fu_992_p1;

assign frame_V_fu_411_p2 = (t_V_reg_251 + 6'd1);

assign g_3_fu_935_p3 = ((sel_tmp11_reg_1661_pp0_iter60_reg[0:0] === 1'b1) ? t_reg_1686 : sel_tmp14_fu_927_p3);

assign grp_fu_367_p0 = x_assign_mid2_v_v_v_reg_1513;

assign indvar_flatten_next1_fu_405_p2 = (indvar_flatten1_reg_240 + 25'd1);

assign indvar_flatten_next_fu_581_p3 = ((exitcond_flatten_fu_417_p2[0:0] === 1'b1) ? 20'd1 : indvar_flatten_op_fu_575_p2);

assign indvar_flatten_op_fu_575_p2 = (20'd1 + indvar_flatten_reg_262);

assign isNeg_1_fu_1045_p3 = sh_assign_3_fu_1039_p2[32'd11];

assign isNeg_2_fu_1174_p3 = sh_assign_6_fu_1168_p2[32'd11];

assign isNeg_3_fu_1303_p3 = sh_assign_9_fu_1297_p2[32'd11];

assign isNeg_fu_726_p3 = sh_assign_fu_720_p2[32'd11];

assign m_axis_video_TDATA = m_axis_video_V_data_V_1_data_out;

assign m_axis_video_TDEST = m_axis_video_V_dest_V_1_data_out;

assign m_axis_video_TID = m_axis_video_V_id_V_1_data_out;

assign m_axis_video_TKEEP = m_axis_video_V_keep_V_1_data_out;

assign m_axis_video_TLAST = m_axis_video_V_last_V_1_data_out;

assign m_axis_video_TSTRB = m_axis_video_V_strb_V_1_data_out;

assign m_axis_video_TUSER = m_axis_video_V_user_V_1_data_out;

assign m_axis_video_TVALID = m_axis_video_V_dest_V_1_state[1'd0];

assign m_axis_video_V_data_V_1_ack_in = m_axis_video_V_data_V_1_state[1'd1];

assign m_axis_video_V_data_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_data_V_1_load_A = (m_axis_video_V_data_V_1_state_cmp_full & ~m_axis_video_V_data_V_1_sel_wr);

assign m_axis_video_V_data_V_1_load_B = (m_axis_video_V_data_V_1_state_cmp_full & m_axis_video_V_data_V_1_sel_wr);

assign m_axis_video_V_data_V_1_sel = m_axis_video_V_data_V_1_sel_rd;

assign m_axis_video_V_data_V_1_state_cmp_full = ((m_axis_video_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_video_V_data_V_1_vld_out = m_axis_video_V_data_V_1_state[1'd0];

assign m_axis_video_V_dest_V_1_ack_in = m_axis_video_V_dest_V_1_state[1'd1];

assign m_axis_video_V_dest_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_dest_V_1_data_out = 1'd0;

assign m_axis_video_V_dest_V_1_sel = m_axis_video_V_dest_V_1_sel_rd;

assign m_axis_video_V_dest_V_1_vld_out = m_axis_video_V_dest_V_1_state[1'd0];

assign m_axis_video_V_id_V_1_ack_in = m_axis_video_V_id_V_1_state[1'd1];

assign m_axis_video_V_id_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_id_V_1_data_out = 1'd0;

assign m_axis_video_V_id_V_1_sel = m_axis_video_V_id_V_1_sel_rd;

assign m_axis_video_V_id_V_1_vld_out = m_axis_video_V_id_V_1_state[1'd0];

assign m_axis_video_V_keep_V_1_ack_in = m_axis_video_V_keep_V_1_state[1'd1];

assign m_axis_video_V_keep_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_keep_V_1_data_out = 3'd0;

assign m_axis_video_V_keep_V_1_sel = m_axis_video_V_keep_V_1_sel_rd;

assign m_axis_video_V_keep_V_1_vld_out = m_axis_video_V_keep_V_1_state[1'd0];

assign m_axis_video_V_last_V_1_ack_in = m_axis_video_V_last_V_1_state[1'd1];

assign m_axis_video_V_last_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_last_V_1_load_A = (m_axis_video_V_last_V_1_state_cmp_full & ~m_axis_video_V_last_V_1_sel_wr);

assign m_axis_video_V_last_V_1_load_B = (m_axis_video_V_last_V_1_state_cmp_full & m_axis_video_V_last_V_1_sel_wr);

assign m_axis_video_V_last_V_1_sel = m_axis_video_V_last_V_1_sel_rd;

assign m_axis_video_V_last_V_1_state_cmp_full = ((m_axis_video_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_video_V_last_V_1_vld_out = m_axis_video_V_last_V_1_state[1'd0];

assign m_axis_video_V_strb_V_1_ack_in = m_axis_video_V_strb_V_1_state[1'd1];

assign m_axis_video_V_strb_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_strb_V_1_data_out = 3'd0;

assign m_axis_video_V_strb_V_1_sel = m_axis_video_V_strb_V_1_sel_rd;

assign m_axis_video_V_strb_V_1_vld_out = m_axis_video_V_strb_V_1_state[1'd0];

assign m_axis_video_V_user_V_1_ack_in = m_axis_video_V_user_V_1_state[1'd1];

assign m_axis_video_V_user_V_1_ack_out = m_axis_video_TREADY;

assign m_axis_video_V_user_V_1_load_A = (m_axis_video_V_user_V_1_state_cmp_full & ~m_axis_video_V_user_V_1_sel_wr);

assign m_axis_video_V_user_V_1_load_B = (m_axis_video_V_user_V_1_state_cmp_full & m_axis_video_V_user_V_1_sel_wr);

assign m_axis_video_V_user_V_1_sel = m_axis_video_V_user_V_1_sel_rd;

assign m_axis_video_V_user_V_1_state_cmp_full = ((m_axis_video_V_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_video_V_user_V_1_vld_out = m_axis_video_V_user_V_1_state[1'd0];

assign mantissa_V_1_cast_fu_712_p1 = mantissa_V_fu_702_p4;

assign mantissa_V_1_fu_1021_p4 = {{{{1'd1}, {tmp_V_3_fu_1017_p1}}}, {1'd0}};

assign mantissa_V_2_fu_1150_p4 = {{{{1'd1}, {tmp_V_5_fu_1146_p1}}}, {1'd0}};

assign mantissa_V_3_cast_fu_1031_p1 = mantissa_V_1_fu_1021_p4;

assign mantissa_V_3_fu_1279_p4 = {{{{1'd1}, {tmp_V_7_fu_1275_p1}}}, {1'd0}};

assign mantissa_V_5_cast_fu_1160_p1 = mantissa_V_2_fu_1150_p4;

assign mantissa_V_7_cast_fu_1289_p1 = mantissa_V_3_fu_1279_p4;

assign mantissa_V_fu_702_p4 = {{{{1'd1}, {tmp_V_1_fu_698_p1}}}, {1'd0}};

assign mul2_fu_1468_p0 = mul2_fu_1468_p00;

assign mul2_fu_1468_p00 = tmp_8_mid1_fu_605_p3;

assign mul2_fu_1468_p1 = 30'd27963;

assign mul4_fu_1474_p0 = mul4_fu_1474_p00;

assign mul4_fu_1474_p00 = ret_V_2_reg_1552;

assign mul4_fu_1474_p1 = 30'd27963;

assign mul_fu_1462_p0 = mul_fu_1462_p00;

assign mul_fu_1462_p00 = tmp_8_fu_589_p3;

assign mul_fu_1462_p1 = 30'd27963;

assign not_exitcond_flatten_fu_465_p2 = (exitcond_flatten_fu_417_p2 ^ 1'd1);

assign or_cond_fu_549_p2 = (tmp_9_fu_543_p2 | tmp_6_fu_537_p2);

assign p_Val2_13_fu_1254_p1 = x_assign_3_reg_1718;

assign p_Val2_18_fu_798_p3 = ((isNeg_fu_726_p3[0:0] === 1'b1) ? tmp_13_fu_784_p1 : tmp_15_fu_788_p4);

assign p_Val2_19_fu_811_p3 = ((tmp_1_reg_1603[0:0] === 1'b1) ? result_V_1_fu_806_p2 : p_Val2_18_reg_1608);

assign p_Val2_20_fu_1246_p3 = ((isNeg_2_fu_1174_p3[0:0] === 1'b1) ? tmp_26_fu_1232_p1 : tmp_27_fu_1236_p4);

assign p_Val2_21_fu_1424_p3 = ((p_Result_1_reg_1739[0:0] === 1'b1) ? result_V_4_fu_1419_p2 : p_Val2_20_reg_1744);

assign p_Val2_22_fu_1375_p3 = ((isNeg_3_fu_1303_p3[0:0] === 1'b1) ? tmp_28_fu_1361_p1 : tmp_30_fu_1365_p4);

assign p_Val2_23_fu_1436_p3 = ((p_Result_2_reg_1750[0:0] === 1'b1) ? result_V_6_fu_1431_p2 : p_Val2_22_reg_1755);

assign p_Val2_8_fu_1125_p1 = x_assign_2_reg_1713;

assign p_Val2_s_fu_996_p1 = x_assign_1_reg_1708;

assign p_shl2_cast_fu_389_p1 = p_shl2_fu_381_p3;

assign p_shl2_cast_mid1_fu_447_p1 = p_shl2_mid1_fu_439_p3;

assign p_shl2_fu_381_p3 = {{t_V_reg_251}, {1'd0}};

assign p_shl2_mid1_fu_439_p3 = {{frame_V_fu_411_p2}, {1'd0}};

assign p_shl_fu_373_p3 = {{t_V_reg_251}, {3'd0}};

assign p_shl_mid1_fu_431_p3 = {{frame_V_fu_411_p2}, {3'd0}};

assign pixel_G_fu_1443_p1 = ap_phi_mux_G_2_phi_fu_312_p6[7:0];

assign r_3_fu_898_p3 = ((sel_tmp11_reg_1661_pp0_iter60_reg[0:0] === 1'b1) ? 64'd4607182418800017408 : sel_tmp9_fu_892_p3);

assign r_V_1_fu_770_p2 = mantissa_V_1_cast_fu_712_p1 << tmp_i_i_i_9_fu_756_p1;

assign r_V_2_fu_1083_p2 = mantissa_V_1_fu_1021_p4 >> tmp_i_i_i1_cast_12_fu_1079_p1;

assign r_V_3_fu_1089_p2 = mantissa_V_3_cast_fu_1031_p1 << tmp_i_i_i1_11_fu_1075_p1;

assign r_V_4_fu_1212_p2 = mantissa_V_2_fu_1150_p4 >> tmp_i_i_i2_cast_14_fu_1208_p1;

assign r_V_5_fu_1218_p2 = mantissa_V_5_cast_fu_1160_p1 << tmp_i_i_i2_13_fu_1204_p1;

assign r_V_6_fu_1341_p2 = mantissa_V_3_fu_1279_p4 >> tmp_i_i_i3_cast_16_fu_1337_p1;

assign r_V_7_fu_1347_p2 = mantissa_V_7_cast_fu_1289_p1 << tmp_i_i_i3_15_fu_1333_p1;

assign r_V_fu_764_p2 = mantissa_V_fu_702_p4 >> tmp_i_i_i_cast_10_fu_760_p1;

assign result_V_1_fu_806_p2 = (32'd0 - p_Val2_18_reg_1608);

assign result_V_3_fu_1407_p2 = (8'd0 - tmp_24_reg_1733);

assign result_V_4_fu_1419_p2 = (32'd0 - p_Val2_20_reg_1744);

assign result_V_6_fu_1431_p2 = (32'd0 - p_Val2_22_reg_1755);

assign ret_V_1_fu_555_p3 = {{t_V_2_mid2_fu_503_p3}, {4'd0}};

assign ret_V_2_fu_563_p2 = ($signed(ret_V_1_fu_555_p3) + $signed(14'd14784));

assign ret_V_fu_393_p2 = (p_shl_fu_373_p3 + p_shl2_cast_fu_389_p1);

assign ret_V_mid1_fu_451_p2 = (p_shl_mid1_fu_431_p3 + p_shl2_cast_mid1_fu_447_p1);

assign row_V_fu_491_p2 = (t_V_1_mid_fu_423_p3 + 10'd1);

assign sel_tmp10_fu_847_p2 = ((p_Val2_19_reg_1614 == 32'd6) ? 1'b1 : 1'b0);

assign sel_tmp11_fu_852_p2 = (sel_tmp5_fu_842_p2 | sel_tmp10_fu_847_p2);

assign sel_tmp12_fu_909_p3 = ((tmp_17_fu_905_p2[0:0] === 1'b1) ? 64'd0 : g_2_fu_190);

assign sel_tmp13_fu_917_p3 = ((sel_tmp4_reg_1640_pp0_iter60_reg[0:0] === 1'b1) ? q_reg_1678_pp0_iter60_reg : sel_tmp12_fu_909_p3);

assign sel_tmp14_fu_927_p3 = ((tmp_18_fu_923_p2[0:0] === 1'b1) ? 64'd4607182418800017408 : sel_tmp13_fu_917_p3);

assign sel_tmp15_fu_941_p3 = ((sel_tmp_reg_1626_pp0_iter60_reg[0:0] === 1'b1) ? q_reg_1678_pp0_iter60_reg : b_2_fu_186);

assign sel_tmp16_fu_951_p3 = ((tmp_19_fu_947_p2[0:0] === 1'b1) ? 64'd4607182418800017408 : sel_tmp15_fu_941_p3);

assign sel_tmp17_fu_959_p3 = ((sel_tmp6_reg_1647_pp0_iter60_reg[0:0] === 1'b1) ? t_reg_1686 : sel_tmp16_fu_951_p3);

assign sel_tmp1_fu_867_p3 = ((sel_tmp_reg_1626_pp0_iter60_reg[0:0] === 1'b1) ? 64'd4607182418800017408 : r_2_fu_194);

assign sel_tmp2_fu_822_p2 = ((p_Val2_19_reg_1614 == 32'd4) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_874_p3 = ((sel_tmp2_reg_1633_pp0_iter60_reg[0:0] === 1'b1) ? t_reg_1686 : sel_tmp1_fu_867_p3);

assign sel_tmp4_fu_827_p2 = ((p_Val2_19_reg_1614 == 32'd3) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_842_p2 = ((p_Val2_19_reg_1614 == 32'd0) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_832_p2 = ((p_Val2_19_reg_1614 == 32'd2) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_884_p3 = ((tmp_10_fu_880_p2[0:0] === 1'b1) ? 64'd0 : sel_tmp3_fu_874_p3);

assign sel_tmp8_fu_837_p2 = ((p_Val2_19_reg_1614 == 32'd1) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_892_p3 = ((sel_tmp8_reg_1654_pp0_iter60_reg[0:0] === 1'b1) ? q_reg_1678_pp0_iter60_reg : sel_tmp7_fu_884_p3);

assign sel_tmp_fu_817_p2 = ((p_Val2_19_reg_1614 == 32'd5) ? 1'b1 : 1'b0);

assign sh_assign_11_cast_fu_1329_p1 = $signed(ush_3_fu_1321_p3);

assign sh_assign_2_cast_fu_752_p1 = $signed(ush_fu_744_p3);

assign sh_assign_3_fu_1039_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i1_cast_fu_1035_p1));

assign sh_assign_5_cast_fu_1071_p1 = $signed(ush_1_fu_1063_p3);

assign sh_assign_6_fu_1168_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i2_cast_fu_1164_p1));

assign sh_assign_8_cast_fu_1200_p1 = $signed(ush_2_fu_1192_p3);

assign sh_assign_9_fu_1297_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i3_cast_fu_1293_p1));

assign sh_assign_fu_720_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i_cast_fu_716_p1));

assign t_V_1_mid2_fu_511_p3 = ((tmp_1_mid_fu_477_p2[0:0] === 1'b1) ? row_V_fu_491_p2 : t_V_1_mid_fu_423_p3);

assign t_V_1_mid_fu_423_p3 = ((exitcond_flatten_fu_417_p2[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_t_V_1_phi_fu_277_p4);

assign t_V_2_mid2_fu_503_p3 = ((tmp_fu_497_p2[0:0] === 1'b1) ? 10'd0 : t_V_2_reg_285);

assign t_V_mid2_fu_483_p3 = ((exitcond_flatten_fu_417_p2[0:0] === 1'b1) ? frame_V_fu_411_p2 : t_V_reg_251);

assign tmp_10_fu_880_p2 = (sel_tmp6_reg_1647_pp0_iter60_reg | sel_tmp4_reg_1640_pp0_iter60_reg);

assign tmp_11_fu_646_p3 = ((exitcond_flatten_reg_1508_pp0_iter1_reg[0:0] === 1'b1) ? 6'd0 : tmp_5_fu_637_p4);

assign tmp_12_cast_fu_668_p1 = $signed(tmp_34_reg_1582);

assign tmp_12_fu_653_p3 = ((tmp_1_mid_reg_1518_pp0_iter1_reg[0:0] === 1'b1) ? tmp_4_fu_628_p4 : tmp_11_fu_646_p3);

assign tmp_13_fu_784_p1 = tmp_16_fu_776_p3;

assign tmp_14_fu_1391_p2 = (($signed(field_V_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_15_fu_788_p4 = {{r_V_1_fu_770_p2[84:53]}};

assign tmp_16_fu_776_p3 = r_V_fu_764_p2[32'd53];

assign tmp_17_fu_905_p2 = (sel_tmp_reg_1626_pp0_iter60_reg | sel_tmp2_reg_1633_pp0_iter60_reg);

assign tmp_18_fu_923_p2 = (sel_tmp8_reg_1654_pp0_iter60_reg | sel_tmp6_reg_1647_pp0_iter60_reg);

assign tmp_19_fu_947_p2 = (sel_tmp4_reg_1640_pp0_iter60_reg | sel_tmp2_reg_1633_pp0_iter60_reg);

assign tmp_1_mid_fu_477_p2 = (tmp_3_fu_471_p2 & not_exitcond_flatten_fu_465_p2);

assign tmp_20_fu_965_p2 = (sel_tmp8_reg_1654_pp0_iter60_reg | sel_tmp11_reg_1661_pp0_iter60_reg);

assign tmp_21_cast_fu_660_p3 = {{tmp_12_fu_653_p3}, {4'd0}};

assign tmp_21_fu_1103_p1 = tmp_25_fu_1095_p3;

assign tmp_22_fu_1107_p4 = {{r_V_3_fu_1089_p2[60:53]}};

assign tmp_23_fu_1412_p3 = ((p_Result_s_reg_1728[0:0] === 1'b1) ? result_V_3_fu_1407_p2 : tmp_24_reg_1733);

assign tmp_24_fu_1117_p3 = ((isNeg_1_fu_1045_p3[0:0] === 1'b1) ? tmp_21_fu_1103_p1 : tmp_22_fu_1107_p4);

assign tmp_25_fu_1095_p3 = r_V_2_fu_1083_p2[32'd53];

assign tmp_26_fu_1232_p1 = tmp_29_fu_1224_p3;

assign tmp_27_fu_1236_p4 = {{r_V_5_fu_1218_p2[84:53]}};

assign tmp_28_fu_1361_p1 = tmp_33_fu_1353_p3;

assign tmp_29_fu_1224_p3 = r_V_4_fu_1212_p2[32'd53];

assign tmp_2_fu_519_p2 = (t_V_2_mid2_fu_503_p3 | t_V_1_mid2_fu_511_p3);

assign tmp_30_fu_1365_p4 = {{r_V_7_fu_1347_p2[84:53]}};

assign tmp_31_fu_671_p2 = ($signed(tmp_21_cast_fu_660_p3) + $signed(tmp_12_cast_fu_668_p1));

assign tmp_33_fu_1353_p3 = r_V_6_fu_1341_p2[32'd53];

assign tmp_35_fu_1383_p3 = field_V_q0[32'd31];

assign tmp_37_fu_1447_p1 = ap_phi_mux_B_2_phi_fu_324_p6[7:0];

assign tmp_3_fu_471_p2 = ((t_V_2_reg_285 == 10'd800) ? 1'b1 : 1'b0);

assign tmp_41_cast_fu_992_p1 = tmp_31_reg_1587_pp0_iter67_reg;

assign tmp_4_fu_628_p4 = {{mul2_reg_1577[29:24]}};

assign tmp_5_fu_637_p4 = {{mul_reg_1567[29:24]}};

assign tmp_6_fu_537_p2 = ((t_V_2_mid2_fu_503_p3 < 10'd100) ? 1'b1 : 1'b0);

assign tmp_8_fu_589_p3 = {{t_V_1_reg_273}, {4'd0}};

assign tmp_8_mid1_fu_605_p3 = {{row_V_reg_1528}, {4'd0}};

assign tmp_9_fu_543_p2 = ((t_V_2_mid2_fu_503_p3 > 10'd699) ? 1'b1 : 1'b0);

assign tmp_V_1_fu_698_p1 = val_assign_mid2_fu_677_p1[51:0];

assign tmp_V_2_fu_1007_p4 = {{p_Val2_s_fu_996_p1[62:52]}};

assign tmp_V_3_fu_1017_p1 = p_Val2_s_fu_996_p1[51:0];

assign tmp_V_4_fu_1136_p4 = {{p_Val2_8_fu_1125_p1[62:52]}};

assign tmp_V_5_fu_1146_p1 = p_Val2_8_fu_1125_p1[51:0];

assign tmp_V_6_fu_1265_p4 = {{p_Val2_13_fu_1254_p1[62:52]}};

assign tmp_V_7_fu_1275_p1 = p_Val2_13_fu_1254_p1[51:0];

assign tmp_V_fu_688_p4 = {{val_assign_mid2_fu_677_p1[62:52]}};

assign tmp_data_V_fu_1451_p4 = {{{ap_phi_mux_pixel_R_phi_fu_299_p6}, {tmp_37_fu_1447_p1}}, {pixel_G_fu_1443_p1}};

assign tmp_fu_497_p2 = (tmp_1_mid_fu_477_p2 | exitcond_flatten_fu_417_p2);

assign tmp_i_i_i1_11_fu_1075_p1 = $unsigned(sh_assign_5_cast_fu_1071_p1);

assign tmp_i_i_i1_cast_12_fu_1079_p1 = $unsigned(sh_assign_5_cast_fu_1071_p1);

assign tmp_i_i_i1_cast_fu_1059_p1 = $signed(tmp_i_i_i1_fu_1053_p2);

assign tmp_i_i_i1_fu_1053_p2 = (11'd1023 - tmp_V_2_fu_1007_p4);

assign tmp_i_i_i2_13_fu_1204_p1 = $unsigned(sh_assign_8_cast_fu_1200_p1);

assign tmp_i_i_i2_cast_14_fu_1208_p1 = $unsigned(sh_assign_8_cast_fu_1200_p1);

assign tmp_i_i_i2_cast_fu_1188_p1 = $signed(tmp_i_i_i2_fu_1182_p2);

assign tmp_i_i_i2_fu_1182_p2 = (11'd1023 - tmp_V_4_fu_1136_p4);

assign tmp_i_i_i3_15_fu_1333_p1 = $unsigned(sh_assign_11_cast_fu_1329_p1);

assign tmp_i_i_i3_cast_16_fu_1337_p1 = $unsigned(sh_assign_11_cast_fu_1329_p1);

assign tmp_i_i_i3_cast_fu_1317_p1 = $signed(tmp_i_i_i3_fu_1311_p2);

assign tmp_i_i_i3_fu_1311_p2 = (11'd1023 - tmp_V_6_fu_1265_p4);

assign tmp_i_i_i_9_fu_756_p1 = $unsigned(sh_assign_2_cast_fu_752_p1);

assign tmp_i_i_i_cast_10_fu_760_p1 = $unsigned(sh_assign_2_cast_fu_752_p1);

assign tmp_i_i_i_cast_fu_740_p1 = $signed(tmp_i_i_i_fu_734_p2);

assign tmp_i_i_i_fu_734_p2 = (11'd1023 - tmp_V_fu_688_p4);

assign tmp_i_i_i_i1_cast_fu_1035_p1 = tmp_V_2_fu_1007_p4;

assign tmp_i_i_i_i2_cast_fu_1164_p1 = tmp_V_4_fu_1136_p4;

assign tmp_i_i_i_i3_cast_fu_1293_p1 = tmp_V_6_fu_1265_p4;

assign tmp_i_i_i_i_cast_fu_716_p1 = tmp_V_fu_688_p4;

assign tmp_last_V_fu_531_p2 = ((t_V_2_mid2_fu_503_p3 == 10'd799) ? 1'b1 : 1'b0);

assign tmp_user_V_fu_525_p2 = ((tmp_2_fu_519_p2 == 10'd0) ? 1'b1 : 1'b0);

assign ush_1_fu_1063_p3 = ((isNeg_1_fu_1045_p3[0:0] === 1'b1) ? tmp_i_i_i1_cast_fu_1059_p1 : sh_assign_3_fu_1039_p2);

assign ush_2_fu_1192_p3 = ((isNeg_2_fu_1174_p3[0:0] === 1'b1) ? tmp_i_i_i2_cast_fu_1188_p1 : sh_assign_6_fu_1168_p2);

assign ush_3_fu_1321_p3 = ((isNeg_3_fu_1303_p3[0:0] === 1'b1) ? tmp_i_i_i3_cast_fu_1317_p1 : sh_assign_9_fu_1297_p2);

assign ush_fu_744_p3 = ((isNeg_fu_726_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_740_p1 : sh_assign_fu_720_p2);

assign val_assign_mid2_fu_677_p1 = x_assign_mid2_reg_1597;

assign x_assign_mid2_v_v_v_fu_457_p3 = ((exitcond_flatten_fu_417_p2[0:0] === 1'b1) ? ret_V_mid1_fu_451_p2 : ret_V_fu_393_p2);

always @ (posedge ap_clk) begin
    x_assign_mid2_v_v_v_reg_1513[0] <= 1'b0;
    ret_V_2_reg_1552[3:0] <= 4'b0000;
end

endmodule //snake_output
